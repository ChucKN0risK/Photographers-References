@charset "UTF-8";

body::before {
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100;
}

@media (min-width: 15.625em) {
  body::before {
    content: "mobile ≥ 250px (15.625em)";
  }
}

@media (min-width: 30em) {
  body::before {
    content: "mobileLandscape ≥ 480px (30em)";
  }
}

@media (min-width: 46.25em) {
  body::before {
    content: "tablet ≥ 740px (46.25em)";
  }
}

@media (min-width: 61.25em) {
  body::before {
    content: "desktop ≥ 980px (61.25em)";
  }
}

@media (min-width: 81.25em) {
  body::before {
    content: "wide ≥ 1300px (81.25em)";
  }
}

/*
 * Normalization
 */

button {
  overflow: visible;
  -webkit-appearance: button;
}

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%;
}

input {
  -webkit-border-radius: 0;
}

main {
  display: block;
}

svg:not(:root) {
  overflow: hidden;
}

/*
 * Universal inheritance
 */

*,
::before,
::after {
  box-sizing: inherit;
}

* {
  font-size: inherit;
  line-height: inherit;
}

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit;
}

/*
 * Opinionated defaults
 */

*,
::before,
::after {
  border-style: solid;
  border-width: 0;
}

* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0;
}

:root {
  background-color: #FFFFFF;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font: 100% / 1.5 sans-serif;
  text-rendering: optimizeLegibility;
}

a {
  text-decoration: none;
}

img,
svg {
  vertical-align: middle;
}

button,
input {
  background-color: transparent;
}

button,
input {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit;
}

button,
[type="password"],
[type="submit"],
[type="text"] {
  min-height: 1.5em;
}

nav ul {
  list-style: none;
}

select::-ms-expand {
  display: none;
}

select::-ms-value {
  color: currentColor;
}

::-moz-selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none;
}

::selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none;
}

/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */

html {
  overflow-y: scroll;
  /* [1] */
  min-height: 100%;
  /* [2] */
  -webkit-text-size-adjust: 100%;
  /* [3] */
  -ms-text-size-adjust: 100%;
  /* [3] */
  font-family: Times New Roman, serif, serif;
  font-size: 100%;
  font-weight: 400;
  margin: 0 auto;
  text-align: left;
}

body,
html {
  width: 100%;
  margin: 0;
  color: #000106;
}

body {
  font-size: 1em;
  position: relative;
  padding-top: 3rem;
}

@media screen and (min-width: 46.25em) {
  body {
    font-size: 1em;
  }
}

@media screen and (min-width: 61.25em) {
  body {
    font-size: 1em;
  }
}

h1,
h2,
h3,
h4,
h5 {
  -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
          transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  line-height: 1.2;
  margin-bottom: 1rem;
}

h1 {
  font-size: 2.0625em;
}

@media screen and (min-width: 46.25em) {
  h1 {
    font-size: 2.4375em;
  }
}

@media screen and (min-width: 61.25em) {
  h1 {
    font-size: 3.1875em;
  }
}

h2 {
  font-size: 1.75em;
}

@media screen and (min-width: 46.25em) {
  h2 {
    font-size: 1.9375em;
  }
}

@media screen and (min-width: 61.25em) {
  h2 {
    font-size: 2.375em;
  }
}

h3 {
  font-size: 1.4375em;
}

@media screen and (min-width: 46.25em) {
  h3 {
    font-size: 1.5625em;
  }
}

@media screen and (min-width: 61.25em) {
  h3 {
    font-size: 1.75em;
  }
}

h4 {
  font-size: 1.1875em;
}

@media screen and (min-width: 46.25em) {
  h4 {
    font-size: 1.25em;
  }
}

@media screen and (min-width: 61.25em) {
  h4 {
    font-size: 1.3125em;
  }
}

h5 {
  font-size: 1em;
}

@media screen and (min-width: 46.25em) {
  h5 {
    font-size: 1em;
  }
}

@media screen and (min-width: 61.25em) {
  h5 {
    font-size: 1em;
  }
}

p,
a,
ul,
blockquote {
  font-family: Times New Roman, serif;
}

img {
  height: auto;
  width: 100%;
}

button {
  cursor: pointer;
}

::-moz-selection {
  background: #029DE0;
  color: #fff;
  text-shadow: none;
}

::selection {
  background: #029DE0;
  color: #fff;
  text-shadow: none;
}

/* ==|====================
   Fonts
   ======================= */

@font-face {
  font-family: 'Gotham-Bold';
  src: url("../fonts/Gotham-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Gotham-Bold.otf") format("opentype"), url("../fonts/Gotham-Bold.woff") format("woff"), url("../fonts/Gotham-Bold.ttf") format("truetype"), url("../fonts/Gotham-Bold.svg#Gotham-Bold") format("svg");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Gotham-Medium';
  src: url("../fonts/Gotham-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Gotham-Medium.otf") format("opentype"), url("../fonts/Gotham-Medium.woff") format("woff"), url("../fonts/Gotham-Medium.ttf") format("truetype"), url("../fonts/Gotham-Medium.svg#Gotham-Bold") format("svg");
  font-weight: normal;
  font-style: normal;
}

.styleguide__title {
  text-align: center;
  margin: 3rem 0;
}

.styleguide__section {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 1rem 0;
  overflow: hidden;
}

.styleguide__section:last-child {
  padding-bottom: 0;
}

.styleguide__section__title {
  text-align: center;
  margin-bottom: 1rem;
  color: #029DE0;
}

.styleguide__section__item {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap;
}

.styleguide__section__item--spaced {
  -webkit-flex-flow: row wrap;
      -ms-flex-flow: row wrap;
          flex-flow: row wrap;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
}

.styleguide__section__item--typography,
.styleguide__section__item--buttons {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
}

.styleguide__section__item--typography {
  margin: 0 auto;
}

@media (min-width: 15.625em) and (max-width: 46.24em) {
  .styleguide__section__item--typography {
    padding: 0 1rem;
  }
}

@media (min-width: 46.25em) and (max-width: 61.24em) {
  .styleguide__section__item--typography {
    padding: 0 2rem;
    width: 35rem;
  }
}

@media (min-width: 61.25em) {
  .styleguide__section__item--typography {
    padding: 0 2rem;
    width: 45rem;
  }
}

.headings,
.text-wrapper,
.lists {
  margin-bottom: 2rem;
}

.text-wrapper p {
  line-height: 1.5;
}

@media (min-width: 15.625em) and (max-width: 61.24em) {
  .text-wrapper p + p {
    margin-bottom: 1rem;
  }
}

@media (min-width: 61.25em) {
  .text-wrapper p + p {
    margin-bottom: 1.5rem;
  }
}

.text-wrapper--thin {
  font-weight: 200;
}

.lists {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  width: 100%;
}

@media (min-width: 30em) {
  .lists {
    -webkit-box-pack: start;
    -webkit-justify-content: flex-start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }

  .lists .list-wrapper {
    margin-right: 2rem;
  }
}

.links {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  width: 100%;
}

/*# sourceMappingURL=data:application/json;base64, */
