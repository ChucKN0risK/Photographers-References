@charset "UTF-8";
.social-link {
  color: #fff; }

.icon-facebook-with-circle {
  color: #3b5998; }

.icon-twitter-with-circle {
  color: #43bfe1; }

.icon-dribbble-with-circle {
  color: #ea4c89; }

.icon-github-with-circle {
  color: #171515; }

.icon-google-with-circle {
  color: #db4437; }

.icon-youtube-with-circle {
  color: #c4302b; }

.content {
  width: 100%;
  max-width: 60rem;
  margin: auto; }

body::before {
  display: none;
  background-color: #FCF8E3;
  border-bottom: 1px solid #FBEED5;
  border-left: 1px solid #FBEED5;
  color: #C09853;
  font: small-caption;
  padding: 3px 6px;
  pointer-events: none;
  position: fixed;
  right: 0;
  top: 0;
  z-index: 100; }
  @media (min-width: 15.625em) {
    body::before {
      content: "mobile ≥ 250px (15.625em)"; } }
  @media (min-width: 30em) {
    body::before {
      content: "mobileLandscape ≥ 480px (30em)"; } }
  @media (min-width: 46.25em) {
    body::before {
      content: "tablet ≥ 740px (46.25em)"; } }
  @media (min-width: 61.25em) {
    body::before {
      content: "desktop ≥ 980px (61.25em)"; } }
  @media (min-width: 81.25em) {
    body::before {
      content: "wide ≥ 1300px (81.25em)"; } }

/*
 * Normalization
 */
audio:not([controls]) {
  display: none; }

button {
  overflow: visible;
  -webkit-appearance: button; }

details {
  display: block; }

html {
  -ms-overflow-style: -ms-autohiding-scrollbar;
  overflow-y: scroll;
  -webkit-text-size-adjust: 100%; }

input {
  -webkit-border-radius: 0; }
  input[type="button"], input[type="reset"], input[type="submit"] {
    -webkit-appearance: button; }
  input[type="number"] {
    width: auto; }
  input[type="search"] {
    -webkit-appearance: textfield; }
    input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
      -webkit-appearance: none; }

main {
  display: block; }

pre {
  overflow: auto; }

progress {
  display: inline-block; }

small {
  font-size: 75%; }

summary {
  display: block; }

svg:not(:root) {
  overflow: hidden; }

template {
  display: none; }

textarea {
  overflow: auto; }

[hidden] {
  display: none; }

/*
 * Universal inheritance
 */
*,
::before,
::after {
  box-sizing: inherit; }

* {
  font-size: inherit;
  line-height: inherit; }

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit; }

/*
 * Opinionated defaults
 */
*,
::before,
::after {
  border-style: solid;
  border-width: 0; }

* {
  background-repeat: no-repeat;
  margin: 0;
  padding: 0; }

:root {
  background-color: #FFFFFF;
  box-sizing: border-box;
  color: #000000;
  cursor: default;
  font: 100% / 1.5 sans-serif;
  text-rendering: optimizeLegibility; }

a {
  text-decoration: none; }

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle; }

button,
input,
select,
textarea {
  background-color: transparent; }

button,
input,
select,
textarea {
  color: inherit;
  font-family: inherit;
  font-style: inherit;
  font-weight: inherit; }

button,
[type="button"],
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="reset"],
[type="search"],
[type="submit"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
select,
textarea {
  min-height: 1.5em; }

code,
kbd,
pre,
samp {
  font-family: monospace, monospace; }

nav ol,
nav ul {
  list-style: none; }

select {
  -moz-appearance: none;
  -webkit-appearance: none; }
  select::-ms-expand {
    display: none; }
  select::-ms-value {
    color: currentColor; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

textarea {
  resize: vertical; }

::-moz-selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

::selection {
  background-color: #B3D4FC;
  color: #ffffff;
  text-shadow: none; }

[aria-busy="true"] {
  cursor: progress; }

[aria-controls] {
  cursor: pointer; }

[aria-disabled] {
  cursor: default; }

[hidden][aria-hidden="false"] {
  clip: rect(0 0 0 0);
  display: inherit;
  position: absolute; }
  [hidden][aria-hidden="false"]:focus {
    clip: auto; }

/**
 * High-, page-level styling.
 *
 * 1. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Prevent certain mobile browsers from automatically zooming fonts.
 */
html {
  overflow-y: scroll;
  /* [1] */
  min-height: 100%;
  /* [2] */
  -webkit-text-size-adjust: 100%;
  /* [3] */
  -ms-text-size-adjust: 100%;
  /* [3] */
  font-family: Times New Roman, serif, serif;
  font-size: 100%;
  font-weight: 400;
  margin: 0 auto;
  text-align: left; }

body,
html {
  width: 100%;
  margin: 0;
  color: #000106; }

body {
  font-size: 1em;
  position: relative;
  padding-top: 7.2rem; }
  @media screen and (min-width: 46.25em) {
    body {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    body {
      font-size: 1em; } }
  body.book-selected {
    padding-top: 8.7rem; }
  @media (min-width: 26.875em) {
    body {
      padding-top: 4.2rem; }
      body.book-selected {
        padding-top: 5.7rem; } }
  @media (min-width: 35em) {
    body.book-selected.logo-onelined {
      padding-top: 4.7rem; } }

h1,
h2,
h3,
h4,
h5,
h6 {
  -webkit-transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
          transition: all cubic-bezier(0.22, 0.61, 0.36, 1) 0.3s;
  line-height: 1.2;
  margin-bottom: 1rem; }

h1 {
  font-size: 2.0625em; }
  @media screen and (min-width: 46.25em) {
    h1 {
      font-size: 2.4375em; } }
  @media screen and (min-width: 61.25em) {
    h1 {
      font-size: 3.1875em; } }

h2 {
  font-size: 1.75em; }
  @media screen and (min-width: 46.25em) {
    h2 {
      font-size: 1.9375em; } }
  @media screen and (min-width: 61.25em) {
    h2 {
      font-size: 2.375em; } }

h3 {
  font-size: 1.4375em; }
  @media screen and (min-width: 46.25em) {
    h3 {
      font-size: 1.5625em; } }
  @media screen and (min-width: 61.25em) {
    h3 {
      font-size: 1.75em; } }

h4 {
  font-size: 1.1875em; }
  @media screen and (min-width: 46.25em) {
    h4 {
      font-size: 1.25em; } }
  @media screen and (min-width: 61.25em) {
    h4 {
      font-size: 1.3125em; } }

h5 {
  font-size: 1em; }
  @media screen and (min-width: 46.25em) {
    h5 {
      font-size: 1em; } }
  @media screen and (min-width: 61.25em) {
    h5 {
      font-size: 1em; } }

p,
a,
ul,
blockquote,
figcaption {
  font-family: Times New Roman, serif; }

img {
  height: auto;
  width: 100%;
  max-width: 100%; }

button {
  cursor: pointer; }

::-moz-selection {
  background: #029DE0;
  color: #fff;
  text-shadow: none; }

::selection {
  background: #029DE0;
  color: #fff;
  text-shadow: none; }

i {
  text-decoration: none; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

/* ==|====================
   Fonts
   ======================= */
@font-face {
  font-family: 'Gotham-Bold';
  src: url("../fonts/Gotham-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/Gotham-Bold.otf") format("opentype"), url("../fonts/Gotham-Bold.woff") format("woff"), url("../fonts/Gotham-Bold.ttf") format("truetype"), url("../fonts/Gotham-Bold.svg#Gotham-Bold") format("svg");
  font-weight: normal;
  font-style: normal; }

@font-face {
  font-family: 'Gotham-Medium';
  src: url("../fonts/Gotham-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/Gotham-Medium.otf") format("opentype"), url("../fonts/Gotham-Medium.woff") format("woff"), url("../fonts/Gotham-Medium.ttf") format("truetype"), url("../fonts/Gotham-Medium.svg#Gotham-Bold") format("svg");
  font-weight: normal;
  font-style: normal; }

.styleguide__title {
  text-align: center;
  margin: 3rem 0; }

.styleguide__section {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  padding: 1rem 0;
  overflow: hidden; }
  .styleguide__section:last-child {
    padding-bottom: 0; }

.styleguide__section__title {
  text-align: center;
  margin-bottom: 1rem;
  color: #029DE0; }
  .styleguide__section__title a {
    text-align: center; }

.styleguide__section__item {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-flow: column wrap;
      -ms-flex-flow: column wrap;
          flex-flow: column wrap; }
  .styleguide__section__item--spaced {
    -webkit-flex-flow: row wrap;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around; }
  .styleguide__section__item--cards {
    -webkit-flex-flow: row wrap;
        -ms-flex-flow: row wrap;
            flex-flow: row wrap;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-justify-content: space-around;
        -ms-flex-pack: distribute;
            justify-content: space-around;
    padding: 0 5rem; }
  .styleguide__section__item--typography, .styleguide__section__item--buttons {
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -webkit-align-items: center;
        -ms-flex-align: center;
            align-items: center; }
    .styleguide__section__item--typography .btn--primary,
    .styleguide__section__item--typography .btn--secondary, .styleguide__section__item--buttons .btn--primary,
    .styleguide__section__item--buttons .btn--secondary {
      margin-bottom: 1rem; }

.styleguide__section__item--typography {
  margin: 0 auto; }
  @media (min-width: 15.625em) and (max-width: 46.24em) {
    .styleguide__section__item--typography {
      padding: 0 1rem; } }
  @media (min-width: 46.25em) and (max-width: 61.24em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 35rem; } }
  @media (min-width: 61.25em) {
    .styleguide__section__item--typography {
      padding: 0 2rem;
      width: 45rem; } }

.headings,
.text-wrapper,
.lists {
  margin-bottom: 2rem; }

.text-wrapper p {
  line-height: 1.5; }

@media (min-width: 15.625em) and (max-width: 61.24em) {
  .text-wrapper p + p {
    margin-bottom: 1rem; } }

@media (min-width: 61.25em) {
  .text-wrapper p + p {
    margin-bottom: 1.5rem; } }

.text-wrapper--thin {
  font-weight: 200; }
  .text-wrapper--thin h5 {
    font-weight: 600; }

.paragraph__subtitle {
  margin-bottom: .5rem;
  margin-top: 1.5rem; }
  .paragraph__subtitle:first-child > p {
    font-weight: normal; }

.lists {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-around;
      -ms-flex-pack: distribute;
          justify-content: space-around;
  width: 100%; }
  @media (min-width: 30em) {
    .lists {
      -webkit-box-pack: start;
      -webkit-justify-content: flex-start;
          -ms-flex-pack: start;
              justify-content: flex-start; }
      .lists .list-wrapper {
        margin-right: 2rem; } }

.links {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
      -ms-flex-pack: start;
          justify-content: flex-start;
  width: 100%; }

.styleguide__section__item--footer {
  margin-top: 2rem; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlZ3VpZGUuY3NzIiwidG9vbHMvdmFyaWFibGVzL19jb2xvcnMuc2NzcyIsInRvb2xzL19zaXRlLXNldHRpbmdzLnNjc3MiLCJ0b29scy9fbWVkaWEtcXVlcmllcy5zY3NzIiwiYmFzZS9fc2FuaXRpemUuc2NzcyIsImJhc2UvX2Jhc2Uuc2NzcyIsImJhc2UvdHlwb2dyYXBoeS9yZXNwb25zaXZlLW1vZHVsYXItc2NhbGUvX2Z1bmN0aW9ucy5zY3NzIiwiYmFzZS90eXBvZ3JhcGh5L3Jlc3BvbnNpdmUtbW9kdWxhci1zY2FsZS9faGVscGVycy5zY3NzIiwidG9vbHMvX3ZhcmlhYmxlcy5zY3NzIiwiZm9udHMvX2ZvbnRzLnNjc3MiLCJzdHlsZWd1aWRlLnNjc3MiLCJ0b29scy9fbWl4aW5zLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCO0FDMkJqQjtFQUNFLFlBdkJVLEVBd0JYOztBQUlDO0VBQ0UsZUFSOEIsRUFTL0I7O0FBRkQ7RUFDRSxlQVJnRCxFQVNqRDs7QUFGRDtFQUNFLGVBUm1FLEVBU3BFOztBQUZEO0VBQ0UsZUFSb0YsRUFTckY7O0FBRkQ7RUFDRSxlQVJxRyxFQVN0Rzs7QUFGRDtFQUNFLGVBUnVILEVBU3hIOztBQ0pIO0VBQ0UsWUFBWTtFQUNaLGlCQUp1QjtFQUt2QixhQUFhLEVBQ2Q7O0FDMk5HO0VBQ0ksY0FBYztFQUNkLDBCQUEwQjtFQUMxQixpQ0FBaUM7RUFDakMsK0JBQStCO0VBQy9CLGVBQWU7RUFDZixvQkFBb0I7RUFDcEIsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixnQkFBZ0I7RUFDaEIsU0FBUztFQUNULE9BQU87RUFDUCxhQUFhLEVBU2hCO0VBMURHO0lBcUNKO01Ba0JZLHFDQUFTLEVBQXlELEVBRzdFO0VBMURHO0lBcUNKO01Ba0JZLDBDQUFTLEVBQXlELEVBRzdFO0VBMURHO0lBcUNKO01Ba0JZLG9DQUFTLEVBQXlELEVBRzdFO0VBMURHO0lBcUNKO01Ba0JZLHFDQUFTLEVBQXlE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OUZNLEVGMEViLEVBQUE7RUF0QkQ7SUFNSSxvQkFBc0IsRUFDdkI7RUZpSks7SUV4SlI7TUFVSSxvQkd2RWEsRUhtRmhCO01BdEJEO1FBYU0sb0JBQXNCLEVBQ3ZCLEVBQUE7RUYwSUc7SUV4SlI7TUFtQk0sb0JBQXNCLEVBQ3ZCLEVBQUE7O0FBSUw7Ozs7OztFSHhFRSwrREFBcUQ7VUFBckQsdURBQXFEO0VHK0VyRCxpQkFBaUI7RUFDakIsb0JBQW9CLEVBQ3JCOztBQUdEO0VDRU0sb0JDMUZRLEVGMEZiO0VDR0s7SURMTjtNQ01RLG9CQzlGTSxFRjBGYixFQUFBO0VDR0s7SURMTjtNQ01RLG9CQzlGTSxFRjBGYixFQUFBOztBQUVEO0VDRk0sa0JDMUZRLEVGOEZiO0VDREs7SURETjtNQ0VRLG9CQzlGTSxFRjhGYixFQUFBO0VDREs7SURETjtNQ0VRLG1CQzlGTSxFRjhGYixFQUFBOztBQUVEO0VDTk0sb0JDMUZRLEVGa0diO0VDTEs7SURHTjtNQ0ZRLG9CQzlGTSxFRmtHYixFQUFBO0VDTEs7SURHTjtNQ0ZRLGtCQzlGTSxFRmtHYixFQUFBOztBQUVEO0VDVk0sb0JDMUZRLEVGc0diO0VDVEs7SURPTjtNQ05RLGtCQzlGTSxFRnNHYixFQUFBO0VDVEs7SURPTjtNQ05RLG9CQzlGTSxFRnNHYixFQUFBOztBQUVEO0VDZE0sZUMxRlEsRUYwR2I7RUNiSztJRFdOO01DVlEsZUM5Rk0sRUYwR2IsRUFBQTtFQ2JLO0lEV047TUNWUSxlQzlGTSxFRjBHYixFQUFBOztBQUVEOzs7OztFQUtFLG9DSGxIMkIsRUdtSDVCOztBQUVEO0VBQ0UsYUFBYTtFQUNiLFlBQVk7RUFDWixnQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxnQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxvQkpsSVk7RUltSVosWUp4SVU7RUl5SVYsa0JBQWtCLEVBQ25COztBQUpEO0VBQ0Usb0JKbElZO0VJbUlaLFlKeElVO0VJeUlWLGtCQUFrQixFQUNuQjs7QUFFRDtFQUNFLHNCQUFzQixFQUN2Qjs7QUFFRDtFQUNFLGVBQWU7RUFDZixZQUFZO0VBQ1osVUFBVTtFQUNWLDJCQUEyQjtFQUMzQixjQUFjO0VBQ2QsV0FBVyxFQUNaOztBSTVKRDs7NkJBRTZCO0FBRzdCO0VBQ0UsMkJBQTJCO0VBQzNCLDRSQUl1RDtFQUN2RCxvQkFBb0I7RUFDcEIsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsNkJBQTZCO0VBQzdCLHNTQUl5RDtFQUN6RCxvQkFBb0I7RUFDcEIsbUJBQW1CLEVBQUE7O0FDTnJCO0VBRVEsbUJBQW1CO0VBQ25CLGVBQWUsRUFDbEI7O0FBR0w7RUFDSSxtQkFBbUI7RUFDbkIscUJBQWM7RUFBZCxzQkFBYztFQUFkLHFCQUFjO0VBQWQsY0FBYztFQUNkLDZCQUF1QjtFQUF2Qiw4QkFBdUI7RUFBdkIsK0JBQXVCO01BQXZCLDJCQUF1QjtVQUF2Qix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUtwQjtFQVZEO0lBUVEsa0JBQWtCLEVBQ3JCOztBQUdMO0VBQ0ksbUJBQW1CO0VBQ25CLG9CQUFvQjtFQUNwQixlVDlCVSxFU2tDYjtFQVBEO0lBS1EsbUJBQW1CLEVBQ3RCOztBQUdMO0VBQ0kscUJBQWM7RUFBZCxzQkFBYztFQUFkLHFCQUFjO0VBQWQsY0FBYztFQUNkLCtCQUF1QjtNQUF2QiwyQkFBdUI7VUFBdkIsdUJBQXVCLEVBb0IxQjtFQXRCRDtJQUlRLDRCQUFvQjtRQUFwQix3QkFBb0I7WUFBcEIsb0JBQW9CO0lBQ3BCLDBCQUFvQjtJQUFwQiw0QkFBb0I7UUFBcEIsdUJBQW9CO1lBQXBCLG9CQUFvQjtJQUNwQixzQ0FBOEI7UUFBOUIsMEJBQThCO1lBQTlCLDhCQUE4QixFQUNqQztFQVBMO0lBU1EsNEJBQW9CO1FBQXBCLHdCQUFvQjtZQUFwQixvQkFBb0I7SUFDcEIsMEJBQW9CO0lBQXBCLDRCQUFvQjtRQUFwQix1QkFBb0I7WUFBcEIsb0JBQW9CO0lBQ3BCLHNDQUE4QjtRQUE5QiwwQkFBOEI7WUFBOUIsOEJBQThCO0lBQzlCLGdCQUFnQixFQUNuQjtFQWJMO0lDNUJFLHFCQUFjO0lBQWQsc0JBQWM7SUFBZCxxQkFBYztJQUFkLGNBQWM7SUFDZCwwQkFBb0I7SUFBcEIsNEJBQW9CO1FBQXBCLHVCQUFvQjtZQUFwQixvQkFBb0IsRURnRGpCO0lBckJMOzs7TUFtQlksb0JBQW9CLEVBQ3ZCOztBQU9UO0VBQ0ksZUFBZSxFQVlsQjtFUG1JTztJT2hKUjtNQUdRLGdCQUFnQixFQVV2QixFQUFBO0VQbUlPO0lPaEpSO01BTVEsZ0JBQWdCO01BQ2hCLGFBQWEsRUFNcEIsRUFBQTtFUG1JTztJT2hKUjtNQVVRLGdCQUFnQjtNQUNoQixhQUFhLEVBRXBCLEVBQUE7O0FBRUQ7OztFQUdJLG9CQUFvQixFQUN2Qjs7QUFFRDtFQUdRLGlCQUFpQixFQUNwQjs7QVB1SEc7RU8zSFI7SUFPWSxvQkFBb0IsRUFLM0IsRUFBQTs7QVArR0c7RU8zSFI7SUFVWSxzQkFBc0IsRUFFN0IsRUFBQTs7QUFHTDtFQUNJLGlCQUFpQixFQUlwQjtFQUxEO0lBR1EsaUJBQWlCLEVBQ3BCOztBQUdMO0VBQ0kscUJBQXFCO0VBQ3JCLG1CQUFtQixFQU10QjtFQVJEO0lBS1ksb0JBQW9CLEVBQ3ZCOztBQUlUO0VBQ0kscUJBQWM7RUFBZCxzQkFBYztFQUFkLHFCQUFjO0VBQWQsY0FBYztFQUNkLHNDQUE4QjtNQUE5QiwwQkFBOEI7VUFBOUIsOEJBQThCO0VBQzlCLFlBQVksRUFPZjtFUGlGTztJTzNGUjtNQUtRLHdCQUE0QjtNQUE1QixvQ0FBNEI7VUFBNUIscUJBQTRCO2NBQTVCLDRCQUE0QixFQUtuQztNQVZEO1FBT1ksbUJBQW1CLEVBQ3RCLEVBQUE7O0FBSVQ7RUFDSSxxQkFBYztFQUFkLHNCQUFjO0VBQWQscUJBQWM7RUFBZCxjQUFjO0VBQ2QsNkJBQXVCO0VBQXZCLDhCQUF1QjtFQUF2QiwrQkFBdUI7TUFBdkIsMkJBQXVCO1VBQXZCLHVCQUF1QjtFQUN2Qix3QkFBNEI7RUFBNUIsb0NBQTRCO01BQTVCLHFCQUE0QjtVQUE1Qiw0QkFBNEI7RUFDNUIsWUFBWSxFQUNmOztBQUtEO0VBQ0ksaUJBQWlCLEVBQ3BCIiwiZmlsZSI6InN0eWxlZ3VpZGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuLnNvY2lhbC1saW5rIHtcbiAgY29sb3I6ICNmZmY7IH1cblxuLmljb24tZmFjZWJvb2std2l0aC1jaXJjbGUge1xuICBjb2xvcjogIzNiNTk5ODsgfVxuXG4uaWNvbi10d2l0dGVyLXdpdGgtY2lyY2xlIHtcbiAgY29sb3I6ICM0M2JmZTE7IH1cblxuLmljb24tZHJpYmJibGUtd2l0aC1jaXJjbGUge1xuICBjb2xvcjogI2VhNGM4OTsgfVxuXG4uaWNvbi1naXRodWItd2l0aC1jaXJjbGUge1xuICBjb2xvcjogIzE3MTUxNTsgfVxuXG4uaWNvbi1nb29nbGUtd2l0aC1jaXJjbGUge1xuICBjb2xvcjogI2RiNDQzNzsgfVxuXG4uaWNvbi15b3V0dWJlLXdpdGgtY2lyY2xlIHtcbiAgY29sb3I6ICNjNDMwMmI7IH1cblxuLmNvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiA2MHJlbTtcbiAgbWFyZ2luOiBhdXRvOyB9XG5cbmJvZHk6OmJlZm9yZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6ICNGQ0Y4RTM7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRkJFRUQ1O1xuICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNGQkVFRDU7XG4gIGNvbG9yOiAjQzA5ODUzO1xuICBmb250OiBzbWFsbC1jYXB0aW9uO1xuICBwYWRkaW5nOiAzcHggNnB4O1xuICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgcG9zaXRpb246IGZpeGVkO1xuICByaWdodDogMDtcbiAgdG9wOiAwO1xuICB6LWluZGV4OiAxMDA7IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDE1LjYyNWVtKSB7XG4gICAgYm9keTo6YmVmb3JlIHtcbiAgICAgIGNvbnRlbnQ6IFwibW9iaWxlIOKJpSAyNTBweCAoMTUuNjI1ZW0pXCI7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMzBlbSkge1xuICAgIGJvZHk6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcIm1vYmlsZUxhbmRzY2FwZSDiiaUgNDgwcHggKDMwZW0pXCI7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICAgIGJvZHk6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcInRhYmxldCDiiaUgNzQwcHggKDQ2LjI1ZW0pXCI7IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjEuMjVlbSkge1xuICAgIGJvZHk6OmJlZm9yZSB7XG4gICAgICBjb250ZW50OiBcImRlc2t0b3Ag4omlIDk4MHB4ICg2MS4yNWVtKVwiOyB9IH1cbiAgQG1lZGlhIChtaW4td2lkdGg6IDgxLjI1ZW0pIHtcbiAgICBib2R5OjpiZWZvcmUge1xuICAgICAgY29udGVudDogXCJ3aWRlIOKJpSAxMzAwcHggKDgxLjI1ZW0pXCI7IH0gfVxuXG4vKlxuICogTm9ybWFsaXphdGlvblxuICovXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuaHRtbCB7XG4gIC1tcy1vdmVyZmxvdy1zdHlsZTogLW1zLWF1dG9oaWRpbmctc2Nyb2xsYmFyO1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgfVxuXG5pbnB1dCB7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDsgfVxuICBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCBpbnB1dFt0eXBlPVwicmVzZXRcIl0sIGlucHV0W3R5cGU9XCJzdWJtaXRcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG4gIGlucHV0W3R5cGU9XCJudW1iZXJcIl0ge1xuICAgIHdpZHRoOiBhdXRvOyB9XG4gIGlucHV0W3R5cGU9XCJzZWFyY2hcIl0ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyB9XG4gICAgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbiwgaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA3NSU7IH1cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLypcbiAqIFVuaXZlcnNhbCBpbmhlcml0YW5jZVxuICovXG4qLFxuOjpiZWZvcmUsXG46OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDsgfVxuXG4qIHtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDsgfVxuXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICB0ZXh0LWRlY29yYXRpb246IGluaGVyaXQ7XG4gIHZlcnRpY2FsLWFsaWduOiBpbmhlcml0OyB9XG5cbi8qXG4gKiBPcGluaW9uYXRlZCBkZWZhdWx0c1xuICovXG4qLFxuOjpiZWZvcmUsXG46OmFmdGVyIHtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAwOyB9XG5cbioge1xuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuOnJvb3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBjb2xvcjogIzAwMDAwMDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBmb250OiAxMDAlIC8gMS41IHNhbnMtc2VyaWY7XG4gIHRleHQtcmVuZGVyaW5nOiBvcHRpbWl6ZUxlZ2liaWxpdHk7IH1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5hdWRpbyxcbmNhbnZhcyxcbmlmcmFtZSxcbmltZyxcbnN2ZyxcbnZpZGVvIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxuXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zdHlsZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7IH1cblxuYnV0dG9uLFxuW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cImRhdGVcIl0sXG5bdHlwZT1cImRhdGV0aW1lXCJdLFxuW3R5cGU9XCJkYXRldGltZS1sb2NhbFwiXSxcblt0eXBlPVwiZW1haWxcIl0sXG5bdHlwZT1cIm1vbnRoXCJdLFxuW3R5cGU9XCJudW1iZXJcIl0sXG5bdHlwZT1cInBhc3N3b3JkXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic2VhcmNoXCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0sXG5bdHlwZT1cInRlbFwiXSxcblt0eXBlPVwidGV4dFwiXSxcblt0eXBlPVwidGltZVwiXSxcblt0eXBlPVwidXJsXCJdLFxuW3R5cGU9XCJ3ZWVrXCJdLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBtaW4taGVpZ2h0OiAxLjVlbTsgfVxuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgfVxuXG5uYXYgb2wsXG5uYXYgdWwge1xuICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbnNlbGVjdCB7XG4gIC1tb3otYXBwZWFyYW5jZTogbm9uZTtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG4gIHNlbGVjdDo6LW1zLWV4cGFuZCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICBzZWxlY3Q6Oi1tcy12YWx1ZSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAwOyB9XG5cbnRleHRhcmVhIHtcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG46Oi1tb3otc2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0IzRDRGQztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0IzRDRGQztcbiAgY29sb3I6ICNmZmZmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cblthcmlhLWJ1c3k9XCJ0cnVlXCJdIHtcbiAgY3Vyc29yOiBwcm9ncmVzczsgfVxuXG5bYXJpYS1jb250cm9sc10ge1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuW2FyaWEtZGlzYWJsZWRdIHtcbiAgY3Vyc29yOiBkZWZhdWx0OyB9XG5cbltoaWRkZW5dW2FyaWEtaGlkZGVuPVwiZmFsc2VcIl0ge1xuICBjbGlwOiByZWN0KDAgMCAwIDApO1xuICBkaXNwbGF5OiBpbmhlcml0O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cbiAgW2hpZGRlbl1bYXJpYS1oaWRkZW49XCJmYWxzZVwiXTpmb2N1cyB7XG4gICAgY2xpcDogYXV0bzsgfVxuXG4vKipcbiAqIEhpZ2gtLCBwYWdlLWxldmVsIHN0eWxpbmcuXG4gKlxuICogMS4gRm9yY2Ugc2Nyb2xsYmFycyB0byBhbHdheXMgYmUgdmlzaWJsZSB0byBwcmV2ZW50IGF3a3dhcmQg4oCYanVtcHPigJkgd2hlblxuICogICAgbmF2aWdhdGluZyBiZXR3ZWVuIHBhZ2VzIHRoYXQgZG8vZG8gbm90IGhhdmUgZW5vdWdoIGNvbnRlbnQgdG8gcHJvZHVjZVxuICogICAgc2Nyb2xsYmFycyBuYXR1cmFsbHkuXG4gKiAyLiBFbnN1cmUgdGhlIHBhZ2UgYWx3YXlzIGZpbGxzIGF0IGxlYXN0IHRoZSBlbnRpcmUgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydC5cbiAqIDMuIFByZXZlbnQgY2VydGFpbiBtb2JpbGUgYnJvd3NlcnMgZnJvbSBhdXRvbWF0aWNhbGx5IHpvb21pbmcgZm9udHMuXG4gKi9cbmh0bWwge1xuICBvdmVyZmxvdy15OiBzY3JvbGw7XG4gIC8qIFsxXSAqL1xuICBtaW4taGVpZ2h0OiAxMDAlO1xuICAvKiBbMl0gKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiBbM10gKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIFszXSAqL1xuICBmb250LWZhbWlseTogVGltZXMgTmV3IFJvbWFuLCBzZXJpZiwgc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHRleHQtYWxpZ246IGxlZnQ7IH1cblxuYm9keSxcbmh0bWwge1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luOiAwO1xuICBjb2xvcjogIzAwMDEwNjsgfVxuXG5ib2R5IHtcbiAgZm9udC1zaXplOiAxZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6IDcuMnJlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gICAgYm9keSB7XG4gICAgICBmb250LXNpemU6IDFlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYxLjI1ZW0pIHtcbiAgICBib2R5IHtcbiAgICAgIGZvbnQtc2l6ZTogMWVtOyB9IH1cbiAgYm9keS5ib29rLXNlbGVjdGVkIHtcbiAgICBwYWRkaW5nLXRvcDogOC43cmVtOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAyNi44NzVlbSkge1xuICAgIGJvZHkge1xuICAgICAgcGFkZGluZy10b3A6IDQuMnJlbTsgfVxuICAgICAgYm9keS5ib29rLXNlbGVjdGVkIHtcbiAgICAgICAgcGFkZGluZy10b3A6IDUuN3JlbTsgfSB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAzNWVtKSB7XG4gICAgYm9keS5ib29rLXNlbGVjdGVkLmxvZ28tb25lbGluZWQge1xuICAgICAgcGFkZGluZy10b3A6IDQuN3JlbTsgfSB9XG5cbmgxLFxuaDIsXG5oMyxcbmg0LFxuaDUsXG5oNiB7XG4gIHRyYW5zaXRpb246IGFsbCBjdWJpYy1iZXppZXIoMC4yMiwgMC42MSwgMC4zNiwgMSkgMC4zcztcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMi4wNjI1ZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICAgIGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogMi40Mzc1ZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gICAgaDEge1xuICAgICAgZm9udC1zaXplOiAzLjE4NzVlbTsgfSB9XG5cbmgyIHtcbiAgZm9udC1zaXplOiAxLjc1ZW07IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNDYuMjVlbSkge1xuICAgIGgyIHtcbiAgICAgIGZvbnQtc2l6ZTogMS45Mzc1ZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gICAgaDIge1xuICAgICAgZm9udC1zaXplOiAyLjM3NWVtOyB9IH1cblxuaDMge1xuICBmb250LXNpemU6IDEuNDM3NWVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDEuNTYyNWVtOyB9IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNjEuMjVlbSkge1xuICAgIGgzIHtcbiAgICAgIGZvbnQtc2l6ZTogMS43NWVtOyB9IH1cblxuaDQge1xuICBmb250LXNpemU6IDEuMTg3NWVtOyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ2LjI1ZW0pIHtcbiAgICBoNCB7XG4gICAgICBmb250LXNpemU6IDEuMjVlbTsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYxLjI1ZW0pIHtcbiAgICBoNCB7XG4gICAgICBmb250LXNpemU6IDEuMzEyNWVtOyB9IH1cblxuaDUge1xuICBmb250LXNpemU6IDFlbTsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA0Ni4yNWVtKSB7XG4gICAgaDUge1xuICAgICAgZm9udC1zaXplOiAxZW07IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MS4yNWVtKSB7XG4gICAgaDUge1xuICAgICAgZm9udC1zaXplOiAxZW07IH0gfVxuXG5wLFxuYSxcbnVsLFxuYmxvY2txdW90ZSxcbmZpZ2NhcHRpb24ge1xuICBmb250LWZhbWlseTogVGltZXMgTmV3IFJvbWFuLCBzZXJpZjsgfVxuXG5pbWcge1xuICBoZWlnaHQ6IGF1dG87XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7IH1cblxuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG5cbjo6c2VsZWN0aW9uIHtcbiAgYmFja2dyb3VuZDogIzAyOURFMDtcbiAgY29sb3I6ICNmZmY7XG4gIHRleHQtc2hhZG93OiBub25lOyB9XG5cbmkge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuaHIge1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlcjogMDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNjY2M7XG4gIG1hcmdpbjogMWVtIDA7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyogPT18PT09PT09PT09PT09PT09PT09PT1cbiAgIEZvbnRzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PSAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnR290aGFtLUJvbGQnO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL0dvdGhhbS1Cb2xkLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0dvdGhhbS1Cb2xkLm90ZlwiKSBmb3JtYXQoXCJvcGVudHlwZVwiKSwgdXJsKFwiLi4vZm9udHMvR290aGFtLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIuLi9mb250cy9Hb3RoYW0tQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0dvdGhhbS1Cb2xkLnN2ZyNHb3RoYW0tQm9sZFwiKSBmb3JtYXQoXCJzdmdcIik7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHb3RoYW0tTWVkaXVtJztcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9Hb3RoYW0tTWVkaXVtLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0dvdGhhbS1NZWRpdW0ub3RmXCIpIGZvcm1hdChcIm9wZW50eXBlXCIpLCB1cmwoXCIuLi9mb250cy9Hb3RoYW0tTWVkaXVtLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiLi4vZm9udHMvR290aGFtLU1lZGl1bS50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi4uL2ZvbnRzL0dvdGhhbS1NZWRpdW0uc3ZnI0dvdGhhbS1Cb2xkXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi5zdHlsZWd1aWRlX190aXRsZSB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgbWFyZ2luOiAzcmVtIDA7IH1cblxuLnN0eWxlZ3VpZGVfX3NlY3Rpb24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHBhZGRpbmc6IDFyZW0gMDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAuc3R5bGVndWlkZV9fc2VjdGlvbjpsYXN0LWNoaWxkIHtcbiAgICBwYWRkaW5nLWJvdHRvbTogMDsgfVxuXG4uc3R5bGVndWlkZV9fc2VjdGlvbl9fdGl0bGUge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGNvbG9yOiAjMDI5REUwOyB9XG4gIC5zdHlsZWd1aWRlX19zZWN0aW9uX190aXRsZSBhIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLnN0eWxlZ3VpZGVfX3NlY3Rpb25fX2l0ZW0ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWZsb3c6IGNvbHVtbiB3cmFwOyB9XG4gIC5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtLS1zcGFjZWQge1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgfVxuICAuc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tY2FyZHMge1xuICAgIGZsZXgtZmxvdzogcm93IHdyYXA7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBwYWRkaW5nOiAwIDVyZW07IH1cbiAgLnN0eWxlZ3VpZGVfX3NlY3Rpb25fX2l0ZW0tLXR5cG9ncmFwaHksIC5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtLS1idXR0b25zIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAuc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tdHlwb2dyYXBoeSAuYnRuLS1wcmltYXJ5LFxuICAgIC5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtLS10eXBvZ3JhcGh5IC5idG4tLXNlY29uZGFyeSwgLnN0eWxlZ3VpZGVfX3NlY3Rpb25fX2l0ZW0tLWJ1dHRvbnMgLmJ0bi0tcHJpbWFyeSxcbiAgICAuc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tYnV0dG9ucyAuYnRuLS1zZWNvbmRhcnkge1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG4uc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tdHlwb2dyYXBoeSB7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG4gIEBtZWRpYSAobWluLXdpZHRoOiAxNS42MjVlbSkgYW5kIChtYXgtd2lkdGg6IDQ2LjI0ZW0pIHtcbiAgICAuc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tdHlwb2dyYXBoeSB7XG4gICAgICBwYWRkaW5nOiAwIDFyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNDYuMjVlbSkgYW5kIChtYXgtd2lkdGg6IDYxLjI0ZW0pIHtcbiAgICAuc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tdHlwb2dyYXBoeSB7XG4gICAgICBwYWRkaW5nOiAwIDJyZW07XG4gICAgICB3aWR0aDogMzVyZW07IH0gfVxuICBAbWVkaWEgKG1pbi13aWR0aDogNjEuMjVlbSkge1xuICAgIC5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtLS10eXBvZ3JhcGh5IHtcbiAgICAgIHBhZGRpbmc6IDAgMnJlbTtcbiAgICAgIHdpZHRoOiA0NXJlbTsgfSB9XG5cbi5oZWFkaW5ncyxcbi50ZXh0LXdyYXBwZXIsXG4ubGlzdHMge1xuICBtYXJnaW4tYm90dG9tOiAycmVtOyB9XG5cbi50ZXh0LXdyYXBwZXIgcCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDE1LjYyNWVtKSBhbmQgKG1heC13aWR0aDogNjEuMjRlbSkge1xuICAudGV4dC13cmFwcGVyIHAgKyBwIHtcbiAgICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9IH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDYxLjI1ZW0pIHtcbiAgLnRleHQtd3JhcHBlciBwICsgcCB7XG4gICAgbWFyZ2luLWJvdHRvbTogMS41cmVtOyB9IH1cblxuLnRleHQtd3JhcHBlci0tdGhpbiB7XG4gIGZvbnQtd2VpZ2h0OiAyMDA7IH1cbiAgLnRleHQtd3JhcHBlci0tdGhpbiBoNSB7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4ucGFyYWdyYXBoX19zdWJ0aXRsZSB7XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICBtYXJnaW4tdG9wOiAxLjVyZW07IH1cbiAgLnBhcmFncmFwaF9fc3VidGl0bGU6Zmlyc3QtY2hpbGQgPiBwIHtcbiAgICBmb250LXdlaWdodDogbm9ybWFsOyB9XG5cbi5saXN0cyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO1xuICB3aWR0aDogMTAwJTsgfVxuICBAbWVkaWEgKG1pbi13aWR0aDogMzBlbSkge1xuICAgIC5saXN0cyB7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cbiAgICAgIC5saXN0cyAubGlzdC13cmFwcGVyIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAycmVtOyB9IH1cblxuLmxpbmtzIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogMTAwJTsgfVxuXG4uc3R5bGVndWlkZV9fc2VjdGlvbl9faXRlbS0tZm9vdGVyIHtcbiAgbWFyZ2luLXRvcDogMnJlbTsgfVxuIiwiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gPT0gQ29sb3JzXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbi8vIEdyYXBoaWMgY2hhcnRcbiR3aGl0ZTogI2ZmZjtcbiRncmV5OiAjMzEzMjM3O1xuJGdyZXktdDogIzUzNTM1MztcbiRkYXJrZ3JleTogIzE4MTkxQztcbiRibGFjazogIzAwMDEwNjtcbiRibHVlOiAjMDI5REUwO1xuJHJlZDogI2U3NGMzYztcbiRncmVlbjogIzI3YWU2MDtcbiRvcmFuZ2U6ICNkMzU0MDA7XG4keWVsbG93OiAjZjFjNDBmO1xuJHBpbms6ICNGRjQzRTc7XG4kbGlnaHRncmV5OiAjRUFFQUVBO1xuJGxpZ2h0Z3JleTI6ICNkMGQwZDA7XG4kZ29sZDogI2ViYmMzMztcbiRnb2xkMjogI2ZmYmUwMDtcbiRnb2xkLWRhcmtlcjogI2ZmYTkzOTtcbiRjb2xvcjE6ICRibHVlO1xuJGVycm9yOiAkcmVkO1xuJHN1Y2Nlc3M6ICRncmVlbjtcblxuLy8gVXNpbmcgU2FzcyBNYXBzIGFzIGV4cGxhaW5lZCBoZXJlIDogaHR0cHM6Ly9qb25zdWguY29tL2Jsb2cvc2Fzcy1tYXBzL1xuJHNvY2lhbC1jb2xvcnM6IChmYWNlYm9vazogIzNiNTk5OCwgdHdpdHRlcjogIzQzYmZlMSwgZHJpYmJibGU6ICNlYTRjODksIGdpdGh1YjogIzE3MTUxNSwgZ29vZ2xlOiAjZGI0NDM3LCB5b3V0dWJlOiAjYzQzMDJiKTtcbi5zb2NpYWwtbGluayB7XG4gIGNvbG9yOiAkd2hpdGU7XG59XG5cbkBlYWNoICRzb2NpYWwtbmV0d29yayxcbiRzb2NpYWwtY29sb3IgaW4gJHNvY2lhbC1jb2xvcnMge1xuICAuaWNvbi0jeyRzb2NpYWwtbmV0d29ya30td2l0aC1jaXJjbGUge1xuICAgIGNvbG9yOiAkc29jaWFsLWNvbG9yO1xuICB9XG59XG5cbi8vIEV4YW1wbGUgOiA8YSBjbGFzcz1cInNvY2lhbC1saW5rIHNvY2lhbC1saW5rLS1kcmliYmJsZVwiPkRyaWJiYmxlPC9hPlxuXG4iLCJAY2hhcnNldCBcIlVURi04XCI7XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vID09IFNpdGUgc2V0dGluZ3Ncbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuLy8gSHRtbCA1IEVsZW1lbnRcbiRhdWRpby1jYW52YXMtdmlkZW86IGZhbHNlOyAvLyBUcnVlIHwgRmFsc2VcblxuLy8gRm9udHNcbiRHb3RoYW0tQjogJ0dvdGhhbS1Cb2xkJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4kR290aGFtLU06ICdHb3RoYW0tTWVkaXVtJywgQXJpYWwsIHNhbnMtc2VyaWY7XG4kVGltZTogVGltZXMgTmV3IFJvbWFuLCBzZXJpZjtcblxuLy8gPSBHZW5lcmFsIFN0eWxlc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbkBtaXhpbiB0cmFuc2l0aW9uIHtcbiAgdHJhbnNpdGlvbjogYWxsIGN1YmljLWJlemllcigwLjIyLCAwLjYxLCAwLjM2LCAxKSAuM3M7XG59XG5cbkBtaXhpbiBib3gtc2hhZG93IHtcbiAgYm94LXNoYWRvdzogMHB4IDBweCAzcHggMHB4IHJnYmEoNTAsIDUwLCA1MCwgMC45KTtcbn1cblxuQG1peGluIGJveC1zaGFkb3ctZ2kge1xuICBib3gtc2hhZG93OiAwIDAgMCAxcHggcmdiYSgwLCAwLCAwLCAwLjA1KSwgMCAycHggMTBweCAwIHJnYmEoMCwgMCwgMCwgMC40KTtcbn1cblxuJHB1YmxpY19wYXRoOiBcIi4uL1wiO1xuJG1heC1jb250ZW50LXdpZHRoOiA2MHJlbTtcblxuLmNvbnRlbnQge1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAkbWF4LWNvbnRlbnQtd2lkdGg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLy8gPSBSZXNwb25zaXZlXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBUbyBlbmFibGUgc3VwcG9ydCBmb3IgYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBAbWVkaWEgcXVlcmllcyxcbi8vIChJRSA8PSA4LCBGaXJlZm94IDw9IDMsIE9wZXJhIDw9IDkpIHNldCAkbXEtcmVzcG9uc2l2ZSB0byBmYWxzZVxuLy8gQ3JlYXRlIGEgc2VwYXJhdGUgc3R5bGVzaGVldCBzZXJ2ZWQgZXhjbHVzaXZlbHkgdG8gdGhlc2UgYnJvd3NlcnMsXG4vLyBtZWFuaW5nIEBtZWRpYSBxdWVyaWVzIHdpbGwgYmUgcmFzdGVyaXplZCwgcmVseWluZyBvbiB0aGUgY2FzY2FkZSBpdHNlbGZcbiRtcS1yZXNwb25zaXZlOiB0cnVlO1xuXG4vLyBOYW1lIHlvdXIgYnJlYWtwb2ludHMgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgdWJpcXVpdG91cyBsYW5ndWFnZVxuLy8gYWNyb3NzIHRlYW0gbWVtYmVycy4gSXQgd2lsbCBpbXByb3ZlIGNvbW11bmljYXRpb24gYmV0d2VlblxuLy8gc3Rha2Vob2xkZXJzLCBkZXNpZ25lcnMsIGRldmVsb3BlcnMsIGFuZCB0ZXN0ZXJzLlxuJG1xLWJyZWFrcG9pbnRzOiAoIG1vYmlsZTogMjUwcHgsIHRhYmxldDogNzQwcHgsIGRlc2t0b3A6IDk4MHB4LCB3aWRlOiAxMzAwcHgsIC8vIFR3ZWFrcG9pbnRzXG5kZXNrdG9wQWQ6IDgxMHB4LCBtb2JpbGVMYW5kc2NhcGU6IDQ4MHB4KTtcblxuLy8gRGVmaW5lIHRoZSBicmVha3BvaW50IGZyb20gdGhlICRtcS1icmVha3BvaW50cyBsaXN0IHRoYXQgc2hvdWxkXG4vLyBiZSB1c2VkIGFzIHRoZSB0YXJnZXQgd2lkdGggd2hlbiBvdXRwdXR0aW5nIGEgc3RhdGljIHN0eWxlc2hlZXRcbi8vIChpLmUuIHdoZW4gJG1xLXJlc3BvbnNpdmUgaXMgc2V0IHRvICdmYWxzZScpLlxuJG1xLXN0YXRpYy1icmVha3BvaW50OiBkZXNrdG9wO1xuXG4vLyBJZiB5b3Ugd2FudCB0byBkaXNwbGF5IHRoZSBjdXJyZW50bHkgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcFxuLy8gcmlnaHQgY29ybmVyIG9mIHlvdXIgc2l0ZSBkdXJpbmcgZGV2ZWxvcG1lbnQsIGFkZCB0aGUgYnJlYWtwb2ludHNcbi8vIHRvIHRoaXMgbGlzdCwgb3JkZXJlZCBieSB3aWR0aCwgZS5nLiAobW9iaWxlLCB0YWJsZXQsIGRlc2t0b3ApLlxuJG1xLXNob3ctYnJlYWtwb2ludHM6IChtb2JpbGUsIG1vYmlsZUxhbmRzY2FwZSwgdGFibGV0LCBkZXNrdG9wLCB3aWRlKTtcblxuLy8gPSBSZXRpbmEgTWVkaWEgUXVlcnlcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyAkaXMtaGRwaSA6IFwiLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAxLjUpLFxuLy8gIChtaW4tLW1vei1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksXG4vLyAgKC1vLW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMvMiksXG4vLyAgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDEuNSksXG4vLyAgKG1pbi1yZXNvbHV0aW9uOiAxLjVkZHB4KVwiO1xuXG4iLCJAY2hhcnNldCBcIlVURi04XCI7IC8vIEZpeGVzIGFuIGlzc3VlIHdoZXJlIFJ1YnkgbG9jYWxlIGlzIG5vdCBzZXQgcHJvcGVybHlcbiAgICAgICAgICAgICAgICAgIC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xL3B1bGwvMTBcblxuLy8vIEJhc2UgZm9udCBzaXplIG9uIHRoZSBgPGJvZHk+YCBlbGVtZW50XG4vLy8gQHR5cGUgTnVtYmVyICh1bml0KVxuJG1xLWJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xuXG4vLy8gUmVzcG9uc2l2ZSBtb2RlXG4vLy9cbi8vLyBTZXQgdG8gYGZhbHNlYCB0byBlbmFibGUgc3VwcG9ydCBmb3IgYnJvd3NlcnMgdGhhdCBkbyBub3Qgc3VwcG9ydCBAbWVkaWEgcXVlcmllcyxcbi8vLyAoSUUgPD0gOCwgRmlyZWZveCA8PSAzLCBPcGVyYSA8PSA5KVxuLy8vXG4vLy8gWW91IGNvdWxkIGNyZWF0ZSBhIHN0eWxlc2hlZXQgc2VydmVkIGV4Y2x1c2l2ZWx5IHRvIG9sZGVyIGJyb3dzZXJzLFxuLy8vIHdoZXJlIEBtZWRpYSBxdWVyaWVzIGFyZSByYXN0ZXJpemVkXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gIC8vIG9sZC1pZS5zY3NzXG4vLy8gICRtcS1yZXNwb25zaXZlOiBmYWxzZTtcbi8vLyAgQGluY2x1ZGUgJ21haW4nOyAvLyBAbWVkaWEgcXVlcmllcyBpbiB0aGlzIGZpbGUgd2lsbCBiZSByYXN0ZXJpemVkIHVwIHRvICRtcS1zdGF0aWMtYnJlYWtwb2ludFxuLy8vICAgICAgICAgICAgICAgICAgIC8vIGxhcmdlciBicmVha3BvaW50cyB3aWxsIGJlIGlnbm9yZWRcbi8vL1xuLy8vIEB0eXBlIEJvb2xlYW5cbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3Jlc3BvbnNpdmUtbW9kZS1vZmYgRGlzYWJsZWQgcmVzcG9uc2l2ZSBtb2RlIGRvY3VtZW50YXRpb25cbiRtcS1yZXNwb25zaXZlOiB0cnVlICFkZWZhdWx0O1xuXG4vLy8gQnJlYWtwb2ludCBsaXN0XG4vLy9cbi8vLyBOYW1lIHlvdXIgYnJlYWtwb2ludHMgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgdWJpcXVpdG91cyBsYW5ndWFnZVxuLy8vIGFjcm9zcyB0ZWFtIG1lbWJlcnMuIEl0IHdpbGwgaW1wcm92ZSBjb21tdW5pY2F0aW9uIGJldHdlZW5cbi8vLyBzdGFrZWhvbGRlcnMsIGRlc2lnbmVycywgZGV2ZWxvcGVycywgYW5kIHRlc3RlcnMuXG4vLy9cbi8vLyBAdHlwZSBNYXBcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI3NlZWluZy10aGUtY3VycmVudGx5LWFjdGl2ZS1icmVha3BvaW50IEZ1bGwgZG9jdW1lbnRhdGlvbiBhbmQgZXhhbXBsZXNcbiRtcS1icmVha3BvaW50czogKFxuICAgIG1vYmlsZTogIDMyMHB4LFxuICAgIHRhYmxldDogIDc0MHB4LFxuICAgIGRlc2t0b3A6IDk4MHB4LFxuICAgIHdpZGU6ICAgIDEzMDBweFxuKSAhZGVmYXVsdDtcblxuLy8vIFN0YXRpYyBicmVha3BvaW50IChmb3IgZml4ZWQtd2lkdGggbGF5b3V0cylcbi8vL1xuLy8vIERlZmluZSB0aGUgYnJlYWtwb2ludCBmcm9tICRtcS1icmVha3BvaW50cyB0aGF0IHNob3VsZFxuLy8vIGJlIHVzZWQgYXMgdGhlIHRhcmdldCB3aWR0aCBmb3IgdGhlIGZpeGVkLXdpZHRoIGxheW91dFxuLy8vIChpLmUuIHdoZW4gJG1xLXJlc3BvbnNpdmUgaXMgc2V0IHRvICdmYWxzZScpIGluIGEgb2xkLWllLnNjc3Ncbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Ncbi8vLyAgLy8gdGFibGV0LW9ubHkuc2Nzc1xuLy8vICAvL1xuLy8vICAvLyBJZ25vcmUgYWxsIHN0eWxlcyBhYm92ZSB0YWJsZXQgYnJlYWtwb2ludCxcbi8vLyAgLy8gYW5kIGZpeCB0aGUgc3R5bGVzIChlLmcuIGxheW91dCkgYXQgdGFibGV0IHdpZHRoXG4vLy8gICRtcS1yZXNwb25zaXZlOiBmYWxzZTtcbi8vLyAgJG1xLXN0YXRpYy1icmVha3BvaW50OiB0YWJsZXQ7XG4vLy8gIEBpbmNsdWRlICdtYWluJzsgLy8gQG1lZGlhIHF1ZXJpZXMgaW4gdGhpcyBmaWxlIHdpbGwgYmUgcmFzdGVyaXplZCB1cCB0byB0YWJsZXRcbi8vLyAgICAgICAgICAgICAgICAgICAvLyBsYXJnZXIgYnJlYWtwb2ludHMgd2lsbCBiZSBpZ25vcmVkXG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2FkZGluZy1jdXN0b20tYnJlYWtwb2ludHMgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuJG1xLXN0YXRpYy1icmVha3BvaW50OiBkZXNrdG9wICFkZWZhdWx0O1xuXG4vLy8gU2hvdyBicmVha3BvaW50cyBpbiB0aGUgdG9wIHJpZ2h0IGNvcm5lclxuLy8vXG4vLy8gSWYgeW91IHdhbnQgdG8gZGlzcGxheSB0aGUgY3VycmVudGx5IGFjdGl2ZSBicmVha3BvaW50IGluIHRoZSB0b3Bcbi8vLyByaWdodCBjb3JuZXIgb2YgeW91ciBzaXRlIGR1cmluZyBkZXZlbG9wbWVudCwgYWRkIHRoZSBicmVha3BvaW50c1xuLy8vIHRvIHRoaXMgbGlzdCwgb3JkZXJlZCBieSB3aWR0aCwgZS5nLiAobW9iaWxlLCB0YWJsZXQsIGRlc2t0b3ApLlxuLy8vXG4vLy8gQHR5cGUgbWFwXG4kbXEtc2hvdy1icmVha3BvaW50czogKCkgIWRlZmF1bHQ7XG5cbi8vLyBDdXN0b21pemUgdGhlIG1lZGlhIHR5cGUgKGUuZy4gYEBtZWRpYSBzY3JlZW5gIG9yIGBAbWVkaWEgcHJpbnRgKVxuLy8vIEJ5IGRlZmF1bHQgc2Fzcy1tcSB1c2VzIGFuIFwiYWxsXCIgbWVkaWEgdHlwZSAoYEBtZWRpYSBhbGwgYW5kIOKApmApXG4vLy9cbi8vLyBAdHlwZSBTdHJpbmdcbi8vLyBAbGluayBodHRwczovL2dpdGh1Yi5jb20vc2Fzcy1tcS9zYXNzLW1xI2NoYW5naW5nLW1lZGlhLXR5cGUgRnVsbCBkb2N1bWVudGF0aW9uIGFuZCBleGFtcGxlc1xuJG1xLW1lZGlhLXR5cGU6IGFsbCAhZGVmYXVsdDtcblxuLy8vIENvbnZlcnQgcGl4ZWxzIHRvIGVtc1xuLy8vXG4vLy8gQHBhcmFtIHtOdW1iZXJ9ICRweCAtIHZhbHVlIHRvIGNvbnZlcnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJGJhc2UtZm9udC1zaXplICgkbXEtYmFzZS1mb250LXNpemUpIC0gYDxib2R5PmAgZm9udCBzaXplXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gICRmb250LXNpemUtaW4tZW1zOiBtcS1weDJlbSgxNnB4KTtcbi8vLyAgcCB7IGZvbnQtc2l6ZTogbXEtcHgyZW0oMTZweCk7IH1cbi8vL1xuLy8vIEByZXF1aXJlcyAkbXEtYmFzZS1mb250LXNpemVcbi8vLyBAcmV0dXJucyB7TnVtYmVyfVxuQGZ1bmN0aW9uIG1xLXB4MmVtKCRweCwgJGJhc2UtZm9udC1zaXplOiAkbXEtYmFzZS1mb250LXNpemUpIHtcbiAgICBAaWYgdW5pdGxlc3MoJHB4KSB7XG4gICAgICAgIEB3YXJuIFwiQXNzdW1pbmcgI3skcHh9IHRvIGJlIGluIHBpeGVscywgYXR0ZW1wdGluZyB0byBjb252ZXJ0IGl0IGludG8gcGl4ZWxzLlwiO1xuICAgICAgICBAcmV0dXJuIG1xLXB4MmVtKCRweCArIDBweCk7IC8vIFRoYXQgbWF5IGZhaWwuXG4gICAgfSBAZWxzZSBpZiB1bml0KCRweCkgPT0gZW0ge1xuICAgICAgICBAcmV0dXJuICRweDtcbiAgICB9XG4gICAgQHJldHVybiAoJHB4IC8gJGJhc2UtZm9udC1zaXplKSAqIDFlbTtcbn1cblxuLy8vIEdldCBhIGJyZWFrcG9pbnQncyB3aWR0aFxuLy8vXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRuYW1lIC0gTmFtZSBvZiB0aGUgYnJlYWtwb2ludC4gT25lIG9mICRtcS1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAkdGFibGV0LXdpZHRoOiBtcS1nZXQtYnJlYWtwb2ludC13aWR0aCh0YWJsZXQpO1xuLy8vICBAbWVkaWEgKG1pbi13aWR0aDogbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoZGVza3RvcCkpIHt9XG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtYnJlYWtwb2ludHNcbi8vL1xuLy8vIEByZXR1cm5zIHtOdW1iZXJ9IFZhbHVlIGluIHBpeGVsc1xuQGZ1bmN0aW9uIG1xLWdldC1icmVha3BvaW50LXdpZHRoKCRuYW1lLCAkYnJlYWtwb2ludHM6ICRtcS1icmVha3BvaW50cykge1xuICAgIEBpZiBtYXAtaGFzLWtleSgkYnJlYWtwb2ludHMsICRuYW1lKSB7XG4gICAgICAgIEByZXR1cm4gbWFwLWdldCgkYnJlYWtwb2ludHMsICRuYW1lKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICAgQHdhcm4gXCJCcmVha3BvaW50ICN7JG5hbWV9IHdhc24ndCBmb3VuZCBpbiAkYnJlYWtwb2ludHMuXCI7XG4gICAgfVxufVxuXG4vLy8gTWVkaWEgUXVlcnkgbWl4aW5cbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgQm9vbGVhbn0gJGZyb20gKGZhbHNlKSAtIE9uZSBvZiAkbXEtYnJlYWtwb2ludHNcbi8vLyBAcGFyYW0ge1N0cmluZyB8IEJvb2xlYW59ICR1bnRpbCAoZmFsc2UpIC0gT25lIG9mICRtcS1icmVha3BvaW50c1xuLy8vIEBwYXJhbSB7U3RyaW5nIHwgQm9vbGVhbn0gJGFuZCAoZmFsc2UpIC0gQWRkaXRpb25hbCBtZWRpYSBxdWVyeSBwYXJhbWV0ZXJzXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRtZWRpYS10eXBlICgkbXEtbWVkaWEtdHlwZSkgLSBNZWRpYSB0eXBlOiBzY3JlZW4sIHByaW504oCmXG4vLy9cbi8vLyBAaWdub3JlIFVuZG9jdW1lbnRlZCBBUEksIGZvciBhZHZhbmNlZCB1c2Ugb25seTpcbi8vLyBAaWdub3JlIEBwYXJhbSB7TWFwfSAkYnJlYWtwb2ludHMgKCRtcS1icmVha3BvaW50cylcbi8vLyBAaWdub3JlIEBwYXJhbSB7U3RyaW5nfSAkc3RhdGljLWJyZWFrcG9pbnQgKCRtcS1zdGF0aWMtYnJlYWtwb2ludClcbi8vL1xuLy8vIEBjb250ZW50IHN0eWxpbmcgcnVsZXMsIHdyYXBwZWQgaW50byBhIEBtZWRpYSBxdWVyeSB3aGVuICRyZXNwb25zaXZlIGlzIHRydWVcbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRtcS1tZWRpYS10eXBlXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJG1xLWJyZWFrcG9pbnRzXG4vLy8gQHJlcXVpcmVzIHtWYXJpYWJsZX0gJG1xLXN0YXRpYy1icmVha3BvaW50XG4vLy8gQHJlcXVpcmVzIHtmdW5jdGlvbn0gbXEtcHgyZW1cbi8vLyBAcmVxdWlyZXMge2Z1bmN0aW9ufSBtcS1nZXQtYnJlYWtwb2ludC13aWR0aFxuLy8vXG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNyZXNwb25zaXZlLW1vZGUtb24tZGVmYXVsdCBGdWxsIGRvY3VtZW50YXRpb24gYW5kIGV4YW1wbGVzXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzXG4vLy8gIC5lbGVtZW50IHtcbi8vLyAgICBAaW5jbHVkZSBtcSgkZnJvbTogbW9iaWxlKSB7XG4vLy8gICAgICBjb2xvcjogcmVkO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSgkdW50aWw6IHRhYmxldCkge1xuLy8vICAgICAgY29sb3I6IGJsdWU7XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKG1vYmlsZSwgdGFibGV0KSB7XG4vLy8gICAgICBjb2xvcjogZ3JlZW47XG4vLy8gICAgfVxuLy8vICAgIEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQsICRhbmQ6ICcob3JpZW50YXRpb246IGxhbmRzY2FwZSknKSB7XG4vLy8gICAgICBjb2xvcjogdGVhbDtcbi8vLyAgICB9XG4vLy8gICAgQGluY2x1ZGUgbXEoOTUwcHgpIHtcbi8vLyAgICAgIGNvbG9yOiBob3RwaW5rO1xuLy8vICAgIH1cbi8vLyAgICBAaW5jbHVkZSBtcSh0YWJsZXQsICRtZWRpYS10eXBlOiBzY3JlZW4pIHtcbi8vLyAgICAgIGNvbG9yOiBob3RwaW5rO1xuLy8vICAgIH1cbi8vLyAgICAvLyBBZHZhbmNlZCB1c2U6XG4vLy8gICAgJG15LWJyZWFrcG9pbnRzOiAoIEw6IDkwMHB4LCBYTDogMTIwMHB4ICk7XG4vLy8gICAgQGluY2x1ZGUgbXEoTCwgJGJyZWFrcG9pbnRzOiAkbXktYnJlYWtwb2ludHMsICRzdGF0aWMtYnJlYWtwb2ludDogTCkge1xuLy8vICAgICAgY29sb3I6IGhvdHBpbms7XG4vLy8gICAgfVxuLy8vICB9XG5AbWl4aW4gbXEoXG4gICAgJGZyb206IGZhbHNlLFxuICAgICR1bnRpbDogZmFsc2UsXG4gICAgJGFuZDogZmFsc2UsXG4gICAgJG1lZGlhLXR5cGU6ICRtcS1tZWRpYS10eXBlLFxuICAgICRicmVha3BvaW50czogJG1xLWJyZWFrcG9pbnRzLFxuICAgICRyZXNwb25zaXZlOiAkbXEtcmVzcG9uc2l2ZSxcbiAgICAkc3RhdGljLWJyZWFrcG9pbnQ6ICRtcS1zdGF0aWMtYnJlYWtwb2ludFxuKSB7XG4gICAgJG1pbi13aWR0aDogMDtcbiAgICAkbWF4LXdpZHRoOiAwO1xuICAgICRtZWRpYS1xdWVyeTogJyc7XG5cbiAgICAvLyBGcm9tOiB0aGlzIGJyZWFrcG9pbnQgKGluY2x1c2l2ZSlcbiAgICBAaWYgJGZyb20ge1xuICAgICAgICBAaWYgdHlwZS1vZigkZnJvbSkgPT0gbnVtYmVyIHtcbiAgICAgICAgICAgICRtaW4td2lkdGg6IG1xLXB4MmVtKCRmcm9tKTtcbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgICAkbWluLXdpZHRoOiBtcS1weDJlbShtcS1nZXQtYnJlYWtwb2ludC13aWR0aCgkZnJvbSwgJGJyZWFrcG9pbnRzKSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBVbnRpbDogdGhhdCBicmVha3BvaW50IChleGNsdXNpdmUpXG4gICAgQGlmICR1bnRpbCB7XG4gICAgICAgIEBpZiB0eXBlLW9mKCR1bnRpbCkgPT0gbnVtYmVyIHtcbiAgICAgICAgICAgICRtYXgtd2lkdGg6IG1xLXB4MmVtKCR1bnRpbCk7XG4gICAgICAgIH0gQGVsc2Uge1xuICAgICAgICAgICAgJG1heC13aWR0aDogbXEtcHgyZW0obXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHVudGlsLCAkYnJlYWtwb2ludHMpKSAtIC4wMWVtO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gUmVzcG9uc2l2ZSBzdXBwb3J0IGlzIGRpc2FibGVkLCByYXN0ZXJpemUgdGhlIG91dHB1dCBvdXRzaWRlIEBtZWRpYSBibG9ja3NcbiAgICAvLyBUaGUgYnJvd3NlciB3aWxsIHJlbHkgb24gdGhlIGNhc2NhZGUgaXRzZWxmLlxuICAgIEBpZiAkcmVzcG9uc2l2ZSA9PSBmYWxzZSB7XG4gICAgICAgICRzdGF0aWMtYnJlYWtwb2ludC13aWR0aDogbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHN0YXRpYy1icmVha3BvaW50LCAkYnJlYWtwb2ludHMpO1xuICAgICAgICAkdGFyZ2V0LXdpZHRoOiBtcS1weDJlbSgkc3RhdGljLWJyZWFrcG9pbnQtd2lkdGgpO1xuICAgICAgICAvLyBPdXRwdXQgb25seSBydWxlcyB0aGF0IHN0YXJ0IGF0IG9yIHNwYW4gb3VyIHRhcmdldCB3aWR0aFxuICAgICAgICBAaWYgKCRhbmQgPT0gZmFsc2UgYW5kICgkbWluLXdpZHRoIDw9ICR0YXJnZXQtd2lkdGgpIGFuZCAoKCR1bnRpbCA9PSBmYWxzZSkgb3IgKCRtYXgtd2lkdGggPj0gJHRhcmdldC13aWR0aCkpKSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIFJlc3BvbnNpdmUgc3VwcG9ydCBpcyBlbmFibGVkLCBvdXRwdXQgcnVsZXMgaW5zaWRlIEBtZWRpYSBxdWVyaWVzXG4gICAgQGVsc2Uge1xuICAgICAgICBAaWYgJG1pbi13aWR0aCAhPSAwIHsgJG1lZGlhLXF1ZXJ5OiAnI3skbWVkaWEtcXVlcnl9IGFuZCAobWluLXdpZHRoOiAjeyRtaW4td2lkdGh9KSc7IH1cbiAgICAgICAgQGlmICRtYXgtd2lkdGggIT0gMCB7ICRtZWRpYS1xdWVyeTogJyN7JG1lZGlhLXF1ZXJ5fSBhbmQgKG1heC13aWR0aDogI3skbWF4LXdpZHRofSknOyB9XG4gICAgICAgIEBpZiAkYW5kICAgICAgICAgICAgeyAkbWVkaWEtcXVlcnk6ICcjeyRtZWRpYS1xdWVyeX0gYW5kICN7JGFuZH0nOyB9XG5cbiAgICAgICAgLy8gUmVtb3ZlIHVubmVjZXNzYXJ5IG1lZGlhIHF1ZXJ5IHByZWZpeCAnYWxsIGFuZCAnXG4gICAgICAgIEBpZiAoJG1lZGlhLXR5cGUgPT0gJ2FsbCcgYW5kICRtZWRpYS1xdWVyeSAhPSAnJykge1xuICAgICAgICAgICAgJG1lZGlhLXR5cGU6ICcnO1xuICAgICAgICAgICAgJG1lZGlhLXF1ZXJ5OiBzdHItc2xpY2UodW5xdW90ZSgkbWVkaWEtcXVlcnkpLCA2KTtcbiAgICAgICAgfVxuXG4gICAgICAgIEBtZWRpYSAjeyRtZWRpYS10eXBlICsgJG1lZGlhLXF1ZXJ5fSB7XG4gICAgICAgICAgICBAY29udGVudDtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuLy8vIEFkZCBhIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkbmFtZSAtIE5hbWUgb2YgdGhlIGJyZWFrcG9pbnRcbi8vLyBAcGFyYW0ge051bWJlcn0gJHdpZHRoIC0gV2lkdGggb2YgdGhlIGJyZWFrcG9pbnRcbi8vL1xuLy8vIEByZXF1aXJlcyB7VmFyaWFibGV9ICRtcS1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICBAaW5jbHVkZSBtcS1hZGQtYnJlYWtwb2ludCh0dnNjcmVlbiwgMTkyMHB4KTtcbi8vLyAgQGluY2x1ZGUgbXEodHZzY3JlZW4pIHt9XG5AbWl4aW4gbXEtYWRkLWJyZWFrcG9pbnQoJG5hbWUsICR3aWR0aCkge1xuICAgICRuZXctYnJlYWtwb2ludDogKCRuYW1lOiAkd2lkdGgpO1xuICAgICRtcS1icmVha3BvaW50czogbWFwLW1lcmdlKCRtcS1icmVha3BvaW50cywgJG5ldy1icmVha3BvaW50KSAhZ2xvYmFsO1xufVxuXG4vLy8gU2hvdyB0aGUgYWN0aXZlIGJyZWFrcG9pbnQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgdGhlIHZpZXdwb3J0XG4vLy8gQGxpbmsgaHR0cHM6Ly9naXRodWIuY29tL3Nhc3MtbXEvc2Fzcy1tcSNzZWVpbmctdGhlLWN1cnJlbnRseS1hY3RpdmUtYnJlYWtwb2ludFxuLy8vXG4vLy8gQHBhcmFtIHtMaXN0fSAkc2hvdy1icmVha3BvaW50cyAoJG1xLXNob3ctYnJlYWtwb2ludHMpIC0gTGlzdCBvZiBicmVha3BvaW50cyB0byBzaG93IGluIHRoZSB0b3AgcmlnaHQgY29ybmVyXG4vLy8gQHBhcmFtIHtNYXB9ICRicmVha3BvaW50cyAoJG1xLWJyZWFrcG9pbnRzKSAtIEJyZWFrcG9pbnQgbmFtZXMgYW5kIHNpemVzXG4vLy9cbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtYnJlYWtwb2ludHNcbi8vLyBAcmVxdWlyZXMge1ZhcmlhYmxlfSAkbXEtc2hvdy1icmVha3BvaW50c1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vICAvLyBTaG93IGJyZWFrcG9pbnRzIHVzaW5nIGdsb2JhbCBzZXR0aW5nc1xuLy8vICBAaW5jbHVkZSBtcS1zaG93LWJyZWFrcG9pbnRzO1xuLy8vXG4vLy8gIC8vIFNob3cgYnJlYWtwb2ludHMgdXNpbmcgY3VzdG9tIHNldHRpbmdzXG4vLy8gIEBpbmNsdWRlIG1xLXNob3ctYnJlYWtwb2ludHMoKEwsIFhMKSwgKFM6IDMwMHB4LCBMOiA4MDBweCwgWEw6IDEyMDBweCkpO1xuQG1peGluIG1xLXNob3ctYnJlYWtwb2ludHMoJHNob3ctYnJlYWtwb2ludHM6ICRtcS1zaG93LWJyZWFrcG9pbnRzLCAkYnJlYWtwb2ludHM6ICRtcS1icmVha3BvaW50cykge1xuICAgIGJvZHk6OmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGQ0Y4RTM7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRkJFRUQ1O1xuICAgICAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNGQkVFRDU7XG4gICAgICAgIGNvbG9yOiAjQzA5ODUzO1xuICAgICAgICBmb250OiBzbWFsbC1jYXB0aW9uO1xuICAgICAgICBwYWRkaW5nOiAzcHggNnB4O1xuICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICByaWdodDogMDtcbiAgICAgICAgdG9wOiAwO1xuICAgICAgICB6LWluZGV4OiAxMDA7XG5cbiAgICAgICAgLy8gTG9vcCB0aHJvdWdoIHRoZSBicmVha3BvaW50cyB0aGF0IHNob3VsZCBiZSBzaG93blxuICAgICAgICBAZWFjaCAkc2hvdy1icmVha3BvaW50IGluICRzaG93LWJyZWFrcG9pbnRzIHtcbiAgICAgICAgICAgICR3aWR0aDogbXEtZ2V0LWJyZWFrcG9pbnQtd2lkdGgoJHNob3ctYnJlYWtwb2ludCwgJGJyZWFrcG9pbnRzKTtcbiAgICAgICAgICAgIEBpbmNsdWRlIG1xKCRzaG93LWJyZWFrcG9pbnQsICRicmVha3BvaW50czogJGJyZWFrcG9pbnRzKSB7XG4gICAgICAgICAgICAgICAgY29udGVudDogXCIjeyRzaG93LWJyZWFrcG9pbnR9IOKJpSAjeyR3aWR0aH0gKCN7bXEtcHgyZW0oJHdpZHRoKX0pXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBpZiBsZW5ndGgoJG1xLXNob3ctYnJlYWtwb2ludHMpID4gMCB7XG4gICAgQGluY2x1ZGUgbXEtc2hvdy1icmVha3BvaW50cztcbn0iLCIvLyBzYW5pdGl6ZS5jc3MgdjMuMC4wIHwgQ0MwIDEuMCBQdWJsaWMgRG9tYWluIHwgZ2l0aHViLmNvbS8xMHVwL3Nhbml0aXplLmNzc1xuXG4kcm9vdC1iYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGICFkZWZhdWx0O1xuJHJvb3QtYm94LXNpemluZzogYm9yZGVyLWJveCAhZGVmYXVsdDtcbiRyb290LWNvbG9yOiAjMDAwMDAwICFkZWZhdWx0O1xuJHJvb3QtY3Vyc29yOiBkZWZhdWx0ICFkZWZhdWx0O1xuJHJvb3QtZm9udC1mYW1pbHk6IHNhbnMtc2VyaWYgIWRlZmF1bHQ7XG4kcm9vdC1mb250LXNpemU6IDEwMCUgIWRlZmF1bHQ7XG4kcm9vdC1saW5lLWhlaWdodDogMS41ICFkZWZhdWx0O1xuJHJvb3QtdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eSAhZGVmYXVsdDtcbiRhbmNob3ItdGV4dC1kZWNvcmF0aW9uOiBub25lICFkZWZhdWx0O1xuJGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQgIWRlZmF1bHQ7XG4kZm9ybS1lbGVtZW50LWJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFkZWZhdWx0O1xuJGZvcm0tZWxlbWVudC1taW4taGVpZ2h0OiBpZih1bml0bGVzcygkcm9vdC1saW5lLWhlaWdodCksICN7JHJvb3QtbGluZS1oZWlnaHR9ZW0sIGlmKHVuaXQoJHJvb3QtbGluZS1oZWlnaHQpICE9JyUnLCAkcm9vdC1saW5lLWhlaWdodCwgbnVsbCkpICFkZWZhdWx0O1xuJG1lZGlhLWVsZW1lbnQtdmVydGljYWwtYWxpZ246IG1pZGRsZSAhZGVmYXVsdDtcbiRtb25vc3BhY2UtZm9udC1mYW1pbHk6IG1vbm9zcGFjZSAhZGVmYXVsdDtcbiRuYXYtbGlzdC1zdHlsZTogbm9uZSAhZGVmYXVsdDtcbiRzZWxlY3Rpb24tYmFja2dyb3VuZC1jb2xvcjogI0IzRDRGQyAhZGVmYXVsdDtcbiRzZWxlY3Rpb24tY29sb3I6ICNmZmZmZmYgIWRlZmF1bHQ7XG4kc2VsZWN0aW9uLXRleHQtc2hhZG93OiBub25lICFkZWZhdWx0O1xuJHNtYWxsLWZvbnQtc2l6ZTogNzUlICFkZWZhdWx0O1xuJHRhYmxlLWJvcmRlci1jb2xsYXBzZTogY29sbGFwc2UgIWRlZmF1bHQ7XG4kdGFibGUtYm9yZGVyLXNwYWNpbmc6IDAgIWRlZmF1bHQ7XG4kdGV4dGFyZWEtcmVzaXplOiB2ZXJ0aWNhbCAhZGVmYXVsdDtcblxuLypcbiAqIE5vcm1hbGl6YXRpb25cbiAqL1xuXG5hdWRpbzpub3QoW2NvbnRyb2xzXSkge1xuICBkaXNwbGF5OiBub25lOyAvLyBDaHJvbWUgNDQtLCBpT1MgOCssIFNhZmFyaSA5K1xufVxuXG5idXR0b24ge1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTEtXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvLyBpT1MgOCtcbn1cblxuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyAvLyBFZGdlIDEyKywgRmlyZWZveCA0MCssIEludGVybmV0IEV4cGxvcmVyIDExLSwgV2luZG93cyBQaG9uZSA4LjErXG59XG5cbmh0bWwge1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IC1tcy1hdXRvaGlkaW5nLXNjcm9sbGJhcjsgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxuICBvdmVyZmxvdy15OiBzY3JvbGw7IC8vIEFsbCBicm93c2VycyB3aXRob3V0IG92ZXJsYXlpbmcgc2Nyb2xsYmFyc1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8vIGlPUyA4K1xufVxuXG5pbnB1dCB7XG4gIC13ZWJraXQtYm9yZGVyLXJhZGl1czogMDsgLy8gaU9TIDgrXG4gICZbdHlwZT1cImJ1dHRvblwiXSxcbiAgJlt0eXBlPVwicmVzZXRcIl0sXG4gICZbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8vIGlPUyA4K1xuICB9XG4gICZbdHlwZT1cIm51bWJlclwiXSB7XG4gICAgd2lkdGg6IGF1dG87IC8vIEZpcmVmb3ggMzYrXG4gIH1cbiAgJlt0eXBlPVwic2VhcmNoXCJdIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDsgLy8gQ2hyb21lIDQ1KywgU2FmYXJpIDkrXG4gICAgJjo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcbiAgICAmOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgLy8gQ2hyb21lIDQ1KywgU2FmYXJpIDkrXG4gICAgfVxuICB9XG59XG5cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgLy8gQW5kcm9pZCA0LjMtLCBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIFdpbmRvd3MgUGhvbmUgOC4xK1xufVxuXG5wcmUge1xuICBvdmVyZmxvdzogYXV0bzsgLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTEtXG59XG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvLyBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIFdpbmRvd3MgUGhvbmUgOC4xK1xufVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogJHNtYWxsLWZvbnQtc2l6ZTsgLy8gQWxsIGJyb3dzZXJzXG59XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBibG9jazsgLy8gRmlyZWZveCA0MCssIEludGVybmV0IEV4cGxvcmVyIDExLSwgV2luZG93cyBQaG9uZSA4LjErXG59XG5cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgLy8gSW50ZXJuZXQgRXhwbG9yZXIgMTEtXG59XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgLy8gQW5kcm9pZCA0LjMtLCBJbnRlcm5ldCBFeHBsb3JlciAxMS0sIGlPUyA3LSwgU2FmYXJpIDctLCBXaW5kb3dzIFBob25lIDguMStcbn1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxufVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IC8vIEludGVybmV0IEV4cGxvcmVyIDEwLVxufVxuXG5cbi8qXG4gKiBVbml2ZXJzYWwgaW5oZXJpdGFuY2VcbiAqL1xuXG4qLFxuOjpiZWZvcmUsXG46OmFmdGVyIHtcbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuKiB7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG59XG5cbjo6YmVmb3JlLFxuOjphZnRlciB7XG4gIHRleHQtZGVjb3JhdGlvbjogaW5oZXJpdDtcbiAgdmVydGljYWwtYWxpZ246IGluaGVyaXQ7XG59XG5cblxuLypcbiAqIE9waW5pb25hdGVkIGRlZmF1bHRzXG4gKi9cblxuLy8gc3BlY2lmeSB0aGUgYm9yZGVyIHN0eWxlIGFuZCB3aWR0aCBvZiBhbGwgZWxlbWVudHNcbiosXG46OmJlZm9yZSxcbjo6YWZ0ZXIge1xuICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICBib3JkZXItd2lkdGg6IDA7XG59XG5cbi8vIHNwZWNpZnkgdGhlIGNvcmUgc3R5bGVzIG9mIGFsbCBlbGVtZW50c1xuKiB7XG4gIGJhY2tncm91bmQtcmVwZWF0OiAkYmFja2dyb3VuZC1yZXBlYXQ7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbn1cblxuLy8gc3BlY2lmeSB0aGUgcm9vdCBzdHlsZXMgb2YgdGhlIGRvY3VtZW50XG46cm9vdCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICRyb290LWJhY2tncm91bmQtY29sb3I7XG4gIGJveC1zaXppbmc6ICRyb290LWJveC1zaXppbmc7XG4gIGNvbG9yOiAkcm9vdC1jb2xvcjtcbiAgY3Vyc29yOiAkcm9vdC1jdXJzb3I7XG4gIGZvbnQ6ICN7JHJvb3QtZm9udC1zaXplfS8jeyRyb290LWxpbmUtaGVpZ2h0fSAkcm9vdC1mb250LWZhbWlseTtcbiAgdGV4dC1yZW5kZXJpbmc6ICRyb290LXRleHQtcmVuZGVyaW5nO1xufVxuXG4vLyBzcGVjaWZ5IHRoZSB0ZXh0IGRlY29yYXRpb24gb2YgYW5jaG9yc1xuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogJGFuY2hvci10ZXh0LWRlY29yYXRpb247XG59XG5cbi8vIHNwZWNpZnkgdGhlIGFsaWdubWVudCBvZiBtZWRpYSBlbGVtZW50c1xuYXVkaW8sXG5jYW52YXMsXG5pZnJhbWUsXG5pbWcsXG5zdmcsXG52aWRlbyB7XG4gIHZlcnRpY2FsLWFsaWduOiAkbWVkaWEtZWxlbWVudC12ZXJ0aWNhbC1hbGlnbjtcbn1cblxuLy8gc3BlY2lmeSB0aGUgYmFja2dyb3VuZCBjb2xvciBvZiBmb3JtIGVsZW1lbnRzXG5idXR0b24sXG5pbnB1dCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogJGZvcm0tZWxlbWVudC1iYWNrZ3JvdW5kLWNvbG9yO1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBpbmhlcml0ZWQgY29sb3IgYW5kIGZvbnQgb2YgZm9ybSBlbGVtZW50c1xuYnV0dG9uLFxuaW5wdXQsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zdHlsZTogaW5oZXJpdDtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8vIHNwZWNpZnkgdGhlIG1pbmltdW0gaGVpZ2h0IG9mIGZvcm0gZWxlbWVudHNcbmJ1dHRvbixcblt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJkYXRlXCJdLFxuW3R5cGU9XCJkYXRldGltZVwiXSxcblt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG5bdHlwZT1cImVtYWlsXCJdLFxuW3R5cGU9XCJtb250aFwiXSxcblt0eXBlPVwibnVtYmVyXCJdLFxuW3R5cGU9XCJwYXNzd29yZFwiXSxcblt0eXBlPVwicmVzZXRcIl0sXG5bdHlwZT1cInNlYXJjaFwiXSxcblt0eXBlPVwic3VibWl0XCJdLFxuW3R5cGU9XCJ0ZWxcIl0sXG5bdHlwZT1cInRleHRcIl0sXG5bdHlwZT1cInRpbWVcIl0sXG5bdHlwZT1cInVybFwiXSxcblt0eXBlPVwid2Vla1wiXSxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgbWluLWhlaWdodDogJGZvcm0tZWxlbWVudC1taW4taGVpZ2h0O1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBmb250IGZhbWlseSBvZiBjb2RlIGVsZW1lbnRzXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiAkbW9ub3NwYWNlLWZvbnQtZmFtaWx5LCBtb25vc3BhY2U7XG59XG5cbi8vIHNwZWNpZnkgdGhlIGxpc3Qgc3R5bGUgb2YgbmF2IGxpc3RzXG5uYXYgb2wsXG5uYXYgdWwge1xuICBsaXN0LXN0eWxlOiAkbmF2LWxpc3Qtc3R5bGU7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHN0YW5kYXJkIGFwcGVhcmFuY2Ugb2Ygc2VsZWN0c1xuc2VsZWN0IHtcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lOyAvLyBGaXJlZm94IDQwK1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IC8vIENocm9tZSA0NStcbiAgJjo6LW1zLWV4cGFuZCB7XG4gICAgZGlzcGxheTogbm9uZTsgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxuICB9XG4gICY6Oi1tcy12YWx1ZSB7XG4gICAgY29sb3I6IGN1cnJlbnRDb2xvcjsgLy8gRWRnZSAxMissIEludGVybmV0IEV4cGxvcmVyIDExLVxuICB9XG59XG5cbi8vIHNwZWNpZnkgdGhlIGJvcmRlciBzdHlsaW5nIG9mIHRhYmxlc1xudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6ICR0YWJsZS1ib3JkZXItY29sbGFwc2U7XG4gIGJvcmRlci1zcGFjaW5nOiAkdGFibGUtYm9yZGVyLXNwYWNpbmc7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHJlc2l6YWJpbGl0eSBvZiB0ZXh0YXJlYXNcbnRleHRhcmVhIHtcbiAgcmVzaXplOiAkdGV4dGFyZWEtcmVzaXplO1xufVxuXG4vLyBzcGVjaWZ5IHRoZSBiYWNrZ3JvdW5kIGNvbG9yLCBmb250IGNvbG9yIGFuZCBkcm9wIHNoYWRvdyBvZiB0ZXh0IHNlbGVjdGlvbnNcbjo6LW1vei1zZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7IC8vIHJlcXVpcmVkIHdoZW4gZGVjbGFyaW5nIDo6c2VsZWN0aW9uXG4gIGNvbG9yOiAkc2VsZWN0aW9uLWNvbG9yO1xuICB0ZXh0LXNoYWRvdzogJHNlbGVjdGlvbi10ZXh0LXNoYWRvdztcbn1cblxuOjpzZWxlY3Rpb24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkc2VsZWN0aW9uLWJhY2tncm91bmQtY29sb3I7IC8vIHJlcXVpcmVkIHdoZW4gZGVjbGFyaW5nIDo6c2VsZWN0aW9uXG4gIGNvbG9yOiAkc2VsZWN0aW9uLWNvbG9yO1xuICB0ZXh0LXNoYWRvdzogJHNlbGVjdGlvbi10ZXh0LXNoYWRvdztcbn1cblxuLy8gc3BlY2lmeSB0aGUgcHJvZ3Jlc3MgY3Vyc29yIG9mIHVwZGF0aW5nIGVsZW1lbnRzXG5bYXJpYS1idXN5PVwidHJ1ZVwiXSB7XG4gIGN1cnNvcjogcHJvZ3Jlc3M7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHBvaW50ZXIgY3Vyc29yIG9mIHRyaWdnZXIgZWxlbWVudHNcblthcmlhLWNvbnRyb2xzXSB7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuLy8gc3BlY2lmeSB0aGUgdW5zdHlsZWQgY3Vyc29yIG9mIGRpc2FibGVkLCBub3QtZWRpdGFibGUsIG9yIG90aGVyd2lzZSBpbm9wZXJhYmxlIGVsZW1lbnRzXG5bYXJpYS1kaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8vIHNwZWNpZnkgdGhlIHN0eWxlIG9mIHZpc3VhbGx5IGhpZGRlbiB5ZXQgYWNjZXNzaWJsZSBlbGVtZW50c1xuW2hpZGRlbl1bYXJpYS1oaWRkZW49XCJmYWxzZVwiXSB7XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIGRpc3BsYXk6IGluaGVyaXQ7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgJjpmb2N1cyB7XG4gICAgY2xpcDogYXV0bztcbiAgfVxufVxuIiwiLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuLy8gQmFzZSB8IERlZmF1bHQsIHNpbmdsZSBlbGVtZW50IHNlbGVjdG9ycyB0aGF0IHdpbGwgbG9vayB0aGUgc2FtZSByZWdhcmRsZXNzIG9mIGxvY2F0aW9uLlxuLy8gPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuXG4vKipcbiAqIEhpZ2gtLCBwYWdlLWxldmVsIHN0eWxpbmcuXG4gKlxuICogMS4gRm9yY2Ugc2Nyb2xsYmFycyB0byBhbHdheXMgYmUgdmlzaWJsZSB0byBwcmV2ZW50IGF3a3dhcmQg4oCYanVtcHPigJkgd2hlblxuICogICAgbmF2aWdhdGluZyBiZXR3ZWVuIHBhZ2VzIHRoYXQgZG8vZG8gbm90IGhhdmUgZW5vdWdoIGNvbnRlbnQgdG8gcHJvZHVjZVxuICogICAgc2Nyb2xsYmFycyBuYXR1cmFsbHkuXG4gKiAyLiBFbnN1cmUgdGhlIHBhZ2UgYWx3YXlzIGZpbGxzIGF0IGxlYXN0IHRoZSBlbnRpcmUgaGVpZ2h0IG9mIHRoZSB2aWV3cG9ydC5cbiAqIDMuIFByZXZlbnQgY2VydGFpbiBtb2JpbGUgYnJvd3NlcnMgZnJvbSBhdXRvbWF0aWNhbGx5IHpvb21pbmcgZm9udHMuXG4gKi9cblxuaHRtbCB7XG4gIC8vIFdlYiBGb250IExvYWRlciBDbGFzc2VzXG4gIC8vIFJlZmVyIHRvIGh0dHBzOi8vcHJvd2VidHlwZS5jb20vZGVsaXZlcmluZy13ZWItZm9udHMvICYgaHR0cHM6Ly9naXRodWIuY29tL3R5cGVraXQvd2ViZm9udGxvYWRlclxuICAvLyAud2YtbG9hZGluZyBwIHtcbiAgLy8gLyogc3R5bGVzIGZvciBmYWxsYmFjayBmb250cyAqL1xuICAvLyB9XG4gIC8vIC53Zi1hY3RpdmUgcCB7XG4gIC8vICAgLyogc3R5bGVzIGZvciBjdXN0b20gZm9udHMgKi9cbiAgLy8gfVxuICAvLyAud2YtaW5hY3RpdmUgcCB7XG4gIC8vICAgLyogdXNlIGZhbGxiYWNrIGZvbnRzICovXG4gIC8vIH1cbiAgb3ZlcmZsb3cteTogc2Nyb2xsO1xuICAvKiBbMV0gKi9cbiAgbWluLWhlaWdodDogMTAwJTtcbiAgLyogWzJdICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogWzNdICovXG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiBbM10gKi9cbiAgLy8gTW9iaWxlIEZpcnN0IEFwcHJvYWNoXG4gIC8vIFJlZmVyIHRvIGh0dHBzOi8vcHJvd2VidHlwZS5jb20vc2V0dGluZy10eXBlL1xuICBmb250LWZhbWlseTogJFRpbWUsIHNlcmlmO1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8vIGxpbmUtaGVpZ2h0OiAxLjY7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIG1hcmdpbjogMCBhdXRvO1xuICAvLyBwYWRkaW5nOiAyZW07IC8vIHBhZGRpbmcgc28gdGhhdCBidWxsZXQgbGlzdCBkb24ndCB0b3VjaGUgdGhlIGVkZ2Ugb2YgdGhlIHNjcmVlblxuICB0ZXh0LWFsaWduOiBsZWZ0O1xufVxuXG5ib2R5LFxuaHRtbCB7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXJnaW46IDA7XG4gIGNvbG9yOiAkYmxhY2s7XG59XG5cbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gVFlQT0dSQVBIWSBNT0RVTEFSIFNDQUxFXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIEZpcnN0IHdlIG5lZWQgdG8gc3BlY2lmeSBvdXIgZGVmYXVsdCBtb2R1bGFyIHNjYWxlIHNldHRpbmdzIDpcbiRtcy1iYXNlOiAxcmVtIDEuMjVyZW07XG4vLyRtcy1yYXRpbzogJG1pbm9yLXRoaXJkO1xuLy8gISBUSElTIFNFQ1RJT04gSVMgUkVTRVJWRUQgRk9SIFRIRSBSRVNQT05TSVZFIE1PRFVMQVIgU0NBTEUgRlJBTUVXT1JLICFcbi8vIFVzZSBhIG1pbm9yLXRoaXJkIGZvciBtb2JpbGUsIGEgbWFqb3ItdGhpcmQgZm9yIHRhYmxldFxuLy8gYW5kIGEgZm91cnRoIGZvciBkZXNrdG9wIGFuZCBmb3IgbGFyZ2VyIHNjcmVlbnNcbkBpbmNsdWRlIHJtcy1zZXQtc2NhbGVzKCAxNnB4LCAkbWlub3ItdGhpcmQsIG1xLWdldC1icmVha3BvaW50LXdpZHRoKHRhYmxldCkgJG1ham9yLXRoaXJkLCBtcS1nZXQtYnJlYWtwb2ludC13aWR0aChkZXNrdG9wKSAkZm91cnRoKTtcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gR0VORVJBTCBTRVRUSU5HU1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5ib2R5IHtcbiAgQGluY2x1ZGUgcm1zKDApOyAvLyAxcmVtXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy10b3A6ICRoZWFkZXItaCArICRzZWNvbmRhcnktbmF2LWg7XG5cbiAgJi5ib29rLXNlbGVjdGVkIHtcbiAgICBwYWRkaW5nLXRvcDogJGhlYWRlci1oICsgJHNlY29uZGFyeS1uYXYtaCArICRhdXRob3ItaDtcbiAgfVxuXG4gIEBpbmNsdWRlIG1xKCRmcm9tOiA0MzBweCkge1xuICAgIHBhZGRpbmctdG9wOiAkaGVhZGVyLWg7XG5cbiAgICAmLmJvb2stc2VsZWN0ZWQge1xuICAgICAgcGFkZGluZy10b3A6ICRoZWFkZXItaCArICRhdXRob3ItaDtcbiAgICB9XG4gIH1cblxuICBAaW5jbHVkZSBtcSgkZnJvbTogNTYwcHgpIHtcbiAgICAmLmJvb2stc2VsZWN0ZWQubG9nby1vbmVsaW5lZCB7XG4gICAgICBwYWRkaW5nLXRvcDogJGhlYWRlci1oICsgJGF1dGhvci1oIC0gMXJlbTtcbiAgICB9XG4gIH1cbn1cblxuaDEsXG5oMixcbmgzLFxuaDQsXG5oNSxcbmg2IHtcbiAgQGluY2x1ZGUgdHJhbnNpdGlvbigpO1xuICBsaW5lLWhlaWdodDogMS4yO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG4vLyBUaGUgbXMoKSBmdW5jdGlvbiB1c3VhbGx5IHJhbmdlcyBmcm9tIC02IHRvIDYvN1xuaDEge1xuICBAaW5jbHVkZSBybXMoNCk7XG59XG5cbmgyIHtcbiAgQGluY2x1ZGUgcm1zKDMpO1xufVxuXG5oMyB7XG4gIEBpbmNsdWRlIHJtcygyKTtcbn1cblxuaDQge1xuICBAaW5jbHVkZSBybXMoMSk7XG59XG5cbmg1IHtcbiAgQGluY2x1ZGUgcm1zKDApO1xufVxuXG5wLFxuYSxcbnVsLFxuYmxvY2txdW90ZSxcbmZpZ2NhcHRpb24ge1xuICBmb250LWZhbWlseTogJFRpbWU7XG59XG5cbmltZyB7XG4gIGhlaWdodDogYXV0bztcbiAgd2lkdGg6IDEwMCU7XG4gIG1heC13aWR0aDogMTAwJTtcbn1cblxuYnV0dG9uIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG46OnNlbGVjdGlvbiB7XG4gIGJhY2tncm91bmQ6ICRjb2xvcjE7XG4gIGNvbG9yOiAkd2hpdGU7XG4gIHRleHQtc2hhZG93OiBub25lO1xufVxuXG5pIHtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5ociB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBoZWlnaHQ6IDFweDtcbiAgYm9yZGVyOiAwO1xuICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcbiAgbWFyZ2luOiAxZW0gMDtcbiAgcGFkZGluZzogMDtcbn1cbiIsIiRybXMtYmFzZTogMTZweDtcbiRybXMtaW50ZXJ2YWxzOiAoMHB4ICRmb3VydGgpLCAoNzY4cHggJGZpZnRoKTtcbiRybXMtdXNlcGl4ZWxzOiBmYWxzZTtcblxuLy8vIFNldHMgdXNlci1kZWZpbmVkIHZhbHVlcyBmb3IgdGhlIG1vZHVsYXIgc2NhbGUsIHdoaWNoIHJlcGxhY2UgdGhlIGRlZmF1bHQgdmFsdWVzIGRlZmluZWQgYWJvdmUuIFRoZSBmdW5jdGlvbiBhY2NlcHRzIGFueSBudW1iZXIgb2YgYXJndW1lbnRzIHdoaWNoIHNob3VsZCB0YWtlIHRoZSBmb3JtOiAkYmFzZSwgJGludGVydmFsMSwgJGludGVydmFsMiwgLi4uXG4vLy9cbi8vLyBAcGFyYW0gIChudW1iZXIgLyBsaXN0KSAkYmFzZTogb25lIG9yIG1vcmUgcGl4ZWwgdmFsdWVzIHRvIHVzZSBhcyB0aGUgYmFzZSBvZiB0aGUgbW9kdWxhciBzY2FsZS4gVGhlc2UgZG9uJ3QgY2hhbmdlIGJldHdlZW4gYnJlYWtwb2ludHMuXG4vLy8gQHBhcmFtICAobGlzdCkgJGludGVydmFsOiBBIGxpc3QgY29udGFpbmluZyBhIHBpeGVsIHZhbHVlIChyZXByZXNlbnRpbmcgYSBtaW4td2lkdGggYnJlYWtwb2ludCkgZm9sbG93ZWQgYnkgYW4gaW50ZXJ2YWwgKGFuIGludGVnZXIgb3Igb25lIG9mIG1vZHVsYXItc2NhbGUncyBwcmVkZWZpbmVkIHJhdGlvcykuXG5AbWl4aW4gcm1zLXNldC1zY2FsZXMoJGFyZ3MuLi4pIHtcbiAgLy8gSWYgbm8gYXJndW1lbnRzIHdlcmUgZ2l2ZW5cbiAgQGlmIGxlbmd0aCgkYXJncykgPT0gMCB7XG4gICAgQHdhcm4gJ05vIGJhc2UgdmFsdWVzIG9yIGludGVydmFscyB3ZXJlIHNldCwgc28gdGhlIGRlZmF1bHQgdmFsdWVzIHdpbGwgYmUgdXNlZC4nO1xuICB9XG4gIC8vIElmIGF0IGxlYXN0IG9uZSBhcmd1bWVudCB3YXMgZ2l2ZW5cbiAgQGVsc2Uge1xuICAgIC8vIFRoZSBmaXJzdCBhcmd1bWVudCBzaG91bGQgYmUgb25lIG9yIG1vcmUgcGl4ZWwgdmFsdWVzXG4gICAgJHJtcy1iYXNlOiBudGgoJGFyZ3MsIDEpO1xuXG4gICAgLy8gSWYgbW9yZSB0aGFuIG9uZSBhcmd1bWVudCB3YXMgZ2l2ZW5cbiAgICBAaWYgbGVuZ3RoKCRhcmdzKSA+IDEge1xuICAgICAgLy8gUmVtb3ZlIHRoZSBkZWZhdWx0IGJyZWFrcG9pbnRzIGFuZCBpbnRlcnZhbHNcbiAgICAgICRybXMtaW50ZXJ2YWxzOiAoKSAhZ2xvYmFsO1xuXG4gICAgICBAZm9yICRpIGZyb20gMiB0aHJvdWdoIGxlbmd0aCgkYXJncykge1xuICAgICAgICAvLyBJZiBhIGxpc3QgaXRlbSBvbmx5IGhhcyBvbmUgdmFsdWUsIGFzc3VtZSBpdCdzIGFuIGludGVydmFsIGFuZCBzZXQgdGhlIGJyZWFrcG9pbnQgdG8gMHB4XG4gICAgICAgIEBpZiBsZW5ndGgobnRoKCRhcmdzLCAkaSkpID09IDEge1xuICAgICAgICAgICRybXMtaW50ZXJ2YWxzOiBhcHBlbmQoJHJtcy1pbnRlcnZhbHMsIDBweCBudGgoJGFyZ3MsICRpKSkgIWdsb2JhbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBPdGhlcndpc2UgY29weSB0aGUgbGlzdCBhcy1pc1xuICAgICAgICBAZWxzZSB7XG4gICAgICAgICAgJHJtcy1pbnRlcnZhbHM6IGFwcGVuZCgkcm1zLWludGVydmFscywgbnRoKCRhcmdzLCAkaSkpICFnbG9iYWw7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgLy8gSWYgb25seSBvbmUgYXJndW1lbnQgd2FzIGdpdmVuXG4gICAgQGVsc2Uge1xuICAgICAgQHdhcm4gJ05vIGludGVydmFscyB3ZXJlIHNldCwgc28gdGhlIGRlZmF1bHQgdmFsdWVzIHdpbGwgYmUgdXNlZC4nO1xuICAgIH1cbiAgfVxufVxuXG4vLy8gT3V0cHV0cyB0aGUgdmFsdWVzIG9mIGVhY2ggc2NhbGUgdG8gdGhlIGNvbnNvbGUgdXNpbmcgbW9kdWxhci1zY2FsZSdzIG1vZHVsYXItc2NhbGUtbGlzdCgpIG1peGluLiBUaGUgcmFuZ2Ugb2YgdmFsdWVzIHRvIGJlIHJldHVybmVkIGNhbiBiZSBzcGVjaWZpZWQ7IG90aGVyd2lzZSwgMjAgdmFsdWVzIHN0YXJ0aW5nIGZyb20gdGhlIGJhc2UgdmFsdWUgd2lsbCBiZSByZXR1cm5lZC5cbi8vL1xuLy8vIEBwYXJhbSAgKG51bWJlcikgJHN0YXJ0OiBpbmRleCBvbiB0aGUgc2NhbGUgdG8gc3RhcnQgYXQgKDAgaXMgdGhlIGJhc2UgdmFsdWUpLlxuLy8vIEBwYXJhbSAgKG51bWJlcikgJGVuZDogaW5kZXggb24gdGhlIHNjYWxlIHRvIGVuZCBhdC5cblxuQG1peGluIHJtcy1saXN0LXNjYWxlcygkc3RhcnQ6IDAsICRlbmQ6IDIwKSB7XG4gIEBlYWNoICRzY2FsZSBpbiAkcm1zLWludGVydmFscyB7XG4gICAgJHNjYWxlLWJyZWFrcG9pbnQ6IG50aCgkc2NhbGUsIDEpO1xuICAgICRzY2FsZS1pbnRlcnZhbDogICBudGgoJHNjYWxlLCAyKTtcblxuICAgIEBpZiAkc2NhbGUtYnJlYWtwb2ludCA9PSAwcHgge1xuICAgICAgQGRlYnVnICdEZWZhdWx0IC0tJztcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgQGRlYnVnICdNaW4td2lkdGg6ICN7JHNjYWxlLWJyZWFrcG9pbnR9IC0tJztcbiAgICB9XG5cbiAgICBAZGVidWcgbXMtbGlzdCgkc3RhcnQsICRlbmQsICRybXMtYmFzZSwgJHNjYWxlLWludGVydmFsKTtcbiAgfVxufVxuXG4vLy8gVXNlIHBpeGVsIHZhbHVlcyBmb3IgYnJlYWtwb2ludHMgYW5kIGZvbnQgc2l6ZXMuXG4vLy9cbi8vLyBAcGFyYW0gIChib29sZWFuKSAkdHJ1ZTogaWYgdHJ1ZSwgdGhlIHN5c3RlbSB3aWxsIHVzZSBwaXhlbHM7IG90aGVyd2lzZSwgZW1zLlxuQG1peGluIHJtcy11c2UtcGl4ZWxzKCR0cnVlOiB0cnVlKSB7XG4gICRybXMtdXNlcGl4ZWxzOiAkdHJ1ZTtcbn1cblxuLy8vIENoYW5nZSB0aGUgYmFzZSBmb250IHNpemUgZnJvbSB0aGUgZGVmYXVsdCBvZiAxNnB4LCBmb3IgdXNlIGJ5IHRoZSB0by1lbSgpIGZ1bmN0aW9uLlxuLy8vXG4vLy8gQHBhcmFtICAobnVtYmVyKSAkbnVtYmVyOiBwaXhlbCB2YWx1ZSB0byBjaGFuZ2UgdG8uXG5AbWl4aW4gcm1zLXNldC1iYXNlKCRudW1iZXIpIHtcbiAgJHJtcy1iYXNlZm9udDogJG51bWJlcjtcbn1cblxuLy8vIEl0ZXJhdGVzIHRocm91Z2ggdGhlIGxpc3Qgb2YgYnJlYWtwb2ludHMgYW5kIGludGVydmFscywgb3V0cHV0dGluZyBtdWx0aXBsZSBmb250LXNpemUgZGVjbGFyYXRpb25zIGZvciBlYWNoIGJyZWFrcG9pbnQuXG4vLy9cbi8vLyBAcGFyYW0gIChudW1iZXIpICRuOiBwb3NpdGlvbiBvbiB0aGUgbW9kdWxhciBzY2FsZSB0byB1c2UuXG5AbWl4aW4gcm1zKCRuOiAwLCAkYmFzZTogZmFsc2UpIHtcbiAgLy8gT3V0cHV0IG9uZSBmb250LXNpemUgZGVmZW5pdGlvbiBmb3IgZWFjaCBkZWZpbmVkIGJyZWFrcG9pbnRcbiAgQGVhY2ggJGludGVydmFsIGluICRybXMtaW50ZXJ2YWxzIHtcbiAgICAvLyBQdWxsIHRoZSBicmVha3BvaW50IGFuZCBpbnRlcnZhbCBmcm9tIHRoZSBsaXN0IGFuZCBnZW5lcmF0ZSB0aGUgZmluYWwgZm9udCBzaXplXG4gICAgJHNjYWxlLWJyZWFrcG9pbnQ6IG50aCgkaW50ZXJ2YWwsIDEpO1xuICAgICRzY2FsZS1pbnRlcnZhbDogICBudGgoJGludGVydmFsLCAyKTtcbiAgICAkb3V0cHV0OiBtcygkbiwgJHJtcy1iYXNlLCAkc2NhbGUtaW50ZXJ2YWwpO1xuXG4gICAgLy8gQ29udmVydCB0aGUgcHggdmFsdWVzIHRvIGVtIHVubGVzcyBvdGhlcndpc2Ugc3BlY2lmaWVkXG4gICAgQGlmICRybXMtdXNlcGl4ZWxzID09IGZhbHNlIHtcbiAgICAgICRzY2FsZS1icmVha3BvaW50OiB0by1lbSgkc2NhbGUtYnJlYWtwb2ludCk7XG4gICAgICAkb3V0cHV0OiAgICAgICAgICAgdG8tZW0oJG91dHB1dCk7XG5cbiAgICAgIC8vIElmIGEgZGlmZmVyZW50IGJhc2UgaGFzIGJlZW4gcGFzc2VkIGluLCBhZGp1c3QgdGhlIG91dHB1dCBmb250IHNpemUgdG8gY29tcGVuc2F0ZVxuICAgICAgQGlmICRiYXNlICE9IGZhbHNlIHtcbiAgICAgICAgLy8gVGhlIGJhc2UgdmFsdWUgaXMgdGhlIGVtIHZhbHVlIGRlcml2ZWQgZnJvbSB0aGUgcHggdmFsdWUgYXQgcG9zaXRpb24gJGJhc2Ugb24gdGhlIHNjYWxlXG4gICAgICAgICRiYXNlLXZhbHVlOiB0by1lbShtcygkYmFzZSwgJHJtcy1iYXNlLCAkc2NhbGUtaW50ZXJ2YWwpKTtcbiAgICAgICAgLy8gVGhlIGFkanVzdGVkIHZhbHVlIGlzIHRoZSBvcmlnaW5hbCB2YWx1ZSBkaXZpZGVkIGJ5IHRoZSBiYXNlIHZhbHVlXG4gICAgICAgICRvdXRwdXQ6ICRvdXRwdXQgLyAkYmFzZS12YWx1ZSAqIDFlbTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBEb24ndCBpbnNlcnQgYSAwcHgvZW0gbWVkaWEgcXVlcnksIGp1c3Qgb3V0cHV0IHRoZSB2YWx1ZVxuICAgIEBpZiBzdHJpcC11bml0cygkc2NhbGUtYnJlYWtwb2ludCkgPT0gMCB7XG4gICAgICBmb250LXNpemU6ICRvdXRwdXQ7XG4gICAgfVxuICAgIEBlbHNlIHtcbiAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRzY2FsZS1icmVha3BvaW50KSB7XG4gICAgICAgIGZvbnQtc2l6ZTogJG91dHB1dDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iLCIkcm1zLWJhc2Vmb250OiAxNnB4O1xuXG4vLy8gVGFrZSBhIHBpeGVsIHZhbHVlIGFuZCBjb252ZXJ0IGl0IHRvIGFuIGVtIHZhbHVlLCB1c2luZyBhIGJhc2UgZm9udCBzaXplIGZvciByZWZlcmVuY2UuXG4vLy9cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRweDogcGl4ZWwgdmFsdWUgdG8gY29udmVydC5cbi8vLyBAcGFyYW0gIHtOdW1iZXJ9ICRiYXNlOiBiYXNlIGZvbnQgc2l6ZSB0byB1c2UgaW4gY2FsY3VsYXRpb24uXG4vLy8gQHJldHVybiB7TnVtYmVyfSBjYWxjdWxhdGVkIGVtIHZhbHVlXG5AZnVuY3Rpb24gdG8tZW0oJHB4LCAkYmFzZTogJHJtcy1iYXNlZm9udCkge1xuICAvLyBJZiBhIG5vbi1waXhlbCB2YWx1ZSB3YXMgcGFzc2VkIGluLCBqdXN0IGhhbmQgaXQgYmFja1xuICAvLyBTaG91bGQgcHJvYmFibHkgdHdlYWsgdGhpcyBiZWhhdmlvclxuICBAaWYgdW5pdCgkcHgpICE9ICdweCcge1xuICAgIEByZXR1cm4gJHB4O1xuICB9XG4gIEByZXR1cm4gKCRweCAvICRiYXNlKSAqIDFlbTtcbn1cblxuXG4vLy8gU3RyaXAgdGhlIHVuaXRzIG9mZiBhIG51bWJlci5cbi8vL1xuLy8vIEBwYXJhbSAge051bWJlcn0gJG51bWJlcjogbnVtYmVyIHdpdGggdW5pdCB0byBjb252ZXJ0LlxuLy8vIEByZXR1cm4ge051bWJlcn0gSW5wdXQgbnVtYmVyIHdpdGhvdXQgdW5pdHMuXG5AZnVuY3Rpb24gc3RyaXAtdW5pdHMoJG51bWJlcikge1xuICBAcmV0dXJuICRudW1iZXIgLyAoJG51bWJlciAqIDAgKyAxKTtcbn0iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLyA9PSBWYXJpYWJsZXNcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuJGhlYWRlci1oOiA0LjJyZW07XG4kYXV0aG9yLWg6IDEuNXJlbTtcbiRzZWNvbmRhcnktbmF2LWg6IDNyZW07XG5cbkBpbXBvcnQgXCJ2YXJpYWJsZXMvY29sb3JzXCI7XG5AaW1wb3J0IFwidmFyaWFibGVzL3otaW5kZXhcIjsiLCIvKiA9PXw9PT09PT09PT09PT09PT09PT09PVxuICAgRm9udHNcbiAgID09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8vIFNldCB5b3VyIGZvbnQtZmFjZSBoZXJlLiBGb3IgZXhhbXBsZSA6XG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdHb3RoYW0tQm9sZCc7XG4gIHNyYzogdXJsKCcuLi9mb250cy9Hb3RoYW0tQm9sZC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvR290aGFtLUJvbGQub3RmJykgIGZvcm1hdCgnb3BlbnR5cGUnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL0dvdGhhbS1Cb2xkLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSxcbiAgICAgICB1cmwoJy4uL2ZvbnRzL0dvdGhhbS1Cb2xkLnR0ZicpICBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Hb3RoYW0tQm9sZC5zdmcjR290aGFtLUJvbGQnKSBmb3JtYXQoJ3N2ZycpO1xuICBmb250LXdlaWdodDogbm9ybWFsO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0dvdGhhbS1NZWRpdW0nO1xuICBzcmM6IHVybCgnLi4vZm9udHMvR290aGFtLU1lZGl1bS5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvR290aGFtLU1lZGl1bS5vdGYnKSAgZm9ybWF0KCdvcGVudHlwZScpLFxuICAgICAgIHVybCgnLi4vZm9udHMvR290aGFtLU1lZGl1bS53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Hb3RoYW0tTWVkaXVtLnR0ZicpICBmb3JtYXQoJ3RydWV0eXBlJyksXG4gICAgICAgdXJsKCcuLi9mb250cy9Hb3RoYW0tTWVkaXVtLnN2ZyNHb3RoYW0tQm9sZCcpIGZvcm1hdCgnc3ZnJyk7XG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbn1cblxuIiwiLy8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vLyBTVFlMRUdVSURFIFNQRUNJRklDIFNUWUxFXG4vLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5AaW1wb3J0IFwidG9vbHMvdmFyaWFibGVzXCI7XG5AaW1wb3J0IFwidG9vbHMvZnVuY3Rpb25zXCI7XG5AaW1wb3J0IFwidG9vbHMvbWl4aW5zXCI7XG5AaW1wb3J0IFwidG9vbHMvc2l0ZS1zZXR0aW5nc1wiO1xuQGltcG9ydCBcInRvb2xzL21lZGlhLXF1ZXJpZXNcIjtcbkBpbXBvcnQgXCJiYXNlL3Nhbml0aXplXCI7XG5AaW1wb3J0IFwiYmFzZS90eXBvZ3JhcGh5L21vZHVsYXItc2NhbGVcIjtcbkBpbXBvcnQgXCJiYXNlL3R5cG9ncmFwaHkvcmVzcG9uc2l2ZS1tb2R1bGFyLXNjYWxlXCI7XG5AaW1wb3J0IFwiYmFzZS9iYXNlXCI7XG5AaW1wb3J0IFwiZm9udHMvZm9udHNcIjtcblxuLy8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vLyBHRU5FUkFMIFNUWUxFXG4vLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnN0eWxlZ3VpZGUge1xuICAgICZfX3RpdGxlIHtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBtYXJnaW46IDNyZW0gMDtcbiAgICB9XG59XG5cbi5zdHlsZWd1aWRlX19zZWN0aW9uIHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIHBhZGRpbmc6IDFyZW0gMDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIFxuICAgICY6bGFzdC1jaGlsZCB7XG4gICAgICAgIHBhZGRpbmctYm90dG9tOiAwO1xuICAgIH1cbn1cblxuLnN0eWxlZ3VpZGVfX3NlY3Rpb25fX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICBjb2xvcjogJGJsdWU7XG4gICAgYSB7XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB9XG59XG5cbi5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZmxvdzogY29sdW1uIHdyYXA7XG4gICAgJi0tc3BhY2VkIHtcbiAgICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgfVxuICAgICYtLWNhcmRzIHtcbiAgICAgICAgZmxleC1mbG93OiByb3cgd3JhcDtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgICAgIHBhZGRpbmc6IDAgNXJlbTtcbiAgICB9XG4gICAgJi0tdHlwb2dyYXBoeSxcbiAgICAmLS1idXR0b25zIHtcbiAgICAgICAgQGluY2x1ZGUgZmxleC12ZXJ0aWNhbC1jZW50ZXIoKTtcbiAgICAgICAgLmJ0bi0tcHJpbWFyeSxcbiAgICAgICAgLmJ0bi0tc2Vjb25kYXJ5IHtcbiAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDFyZW07XG4gICAgICAgIH1cbiAgICB9XG59XG5cbi8vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLy8gVFlQT0dSQVBIWSBTVFlMRVxuLy8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi5zdHlsZWd1aWRlX19zZWN0aW9uX19pdGVtLS10eXBvZ3JhcGh5IHtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBAaW5jbHVkZSBtcSgkZnJvbTogbW9iaWxlLCAkdW50aWw6IHRhYmxldCkge1xuICAgICAgICBwYWRkaW5nOiAwIDFyZW07XG4gICAgfVxuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiB0YWJsZXQsICR1bnRpbDogZGVza3RvcCkge1xuICAgICAgICBwYWRkaW5nOiAwIDJyZW07XG4gICAgICAgIHdpZHRoOiAzNXJlbTtcbiAgICB9XG4gICAgQGluY2x1ZGUgbXEoJGZyb206IGRlc2t0b3ApIHtcbiAgICAgICAgcGFkZGluZzogMCAycmVtO1xuICAgICAgICB3aWR0aDogNDVyZW07XG4gICAgfVxufVxuXG4uaGVhZGluZ3MsXG4udGV4dC13cmFwcGVyLFxuLmxpc3RzIHtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xufVxuXG4udGV4dC13cmFwcGVyIHtcbiAgICBwIHtcbiAgICAgICAgLy8gQGluY2x1ZGUgcm1zKDEpO1xuICAgICAgICBsaW5lLWhlaWdodDogMS41O1xuICAgIH1cbiAgICBwICsgcCB7XG4gICAgICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBtb2JpbGUsICR1bnRpbDogZGVza3RvcCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICBAaW5jbHVkZSBtcSgkZnJvbTogZGVza3RvcCkge1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMS41cmVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4udGV4dC13cmFwcGVyLS10aGluIHtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIGg1IHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB9XG59XG5cbi5wYXJhZ3JhcGhfX3N1YnRpdGxlIHtcbiAgICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgICBtYXJnaW4tdG9wOiAxLjVyZW07XG4gICAgJjpmaXJzdC1jaGlsZCB7XG4gICAgICAgID4gcCB7XG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubGlzdHMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgQGluY2x1ZGUgbXEoJGZyb206IG1vYmlsZUxhbmRzY2FwZSkge1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgICAgIC5saXN0LXdyYXBwZXIge1xuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAycmVtO1xuICAgICAgICB9XG4gICAgfVxufVxuXG4ubGlua3Mge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi8vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4vLy8gRk9PVEVSXG4vLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLnN0eWxlZ3VpZGVfX3NlY3Rpb25fX2l0ZW0tLWZvb3RlciB7XG4gICAgbWFyZ2luLXRvcDogMnJlbTtcbn1cbiIsIi8vID09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUb29scyAvIE1peGluc1xuLy8gPT09PT09PT09PT09PT09PT09PT09PT1cbi8vLyBQbGFjZWhvbGRlclxuQG1peGluIHBsYWNlaG9sZGVyKCRjb2xvcjogJGNsci1taXhpbi1wbGFjZWhvbGRlcikge1xuICAmOjotd2Via2l0LWlucHV0LXBsYWNlaG9sZGVyIHtcbiAgICBjb2xvcjogJGNvbG9yO1xuICB9XG4gICY6LW1vei1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxuICAmOi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxufVxuXG4vLy8gRmxleGJveCB2ZXJ0aWNhbCBDZW50ZXJpbmcgKGFwcGx5IHRoaXMgY2xhc3Mgb24gdGhlIHBhcmVudCBlbGVtZW50IG9mIHlvdXIgdGFyZ2V0ZWQgY2hpbGRyZW4pXG5AbWl4aW4gZmxleC12ZXJ0aWNhbC1jZW50ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4vLy8gRmxleGJveCBhYnNvbHV0ZSBjZW50ZXJpbmcgKGFwcGx5IHRoaXMgY2xhc3Mgb24gdGhlIHBhcmVudCBlbGVtZW50IG9mIHlvdXIgdGFyZ2V0ZWQgY2hpbGRyZW4pXG4vLy9cbi8vLyBAYXV0aG9yIExvdWlzIENoZW5haXNcbi8vL1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5mb28ge1xuLy8vICAgICBAaW5jbHVkZSBmbGV4LWFic29sdXRlLWNlbnRlcigpO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIG91dHB1dFxuLy8vICAgLmZvbyB7XG4vLy8gICAgIGRpc3BsYXk6IGZsZXg7XG4vLy8gICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4vLy8gICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuLy8vICAgfVxuQG1peGluIGZsZXgtYWJzb2x1dGUtY2VudGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi8vLyBWZXJ0aWNhbCAmIEhvcml6b250YWwgQ2VudGVyXG4vLy9cbi8vLyBAYXV0aG9yIExvdWlzIENoZW5haXNcbi8vL1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2Vcbi8vLyAgIC5mb28ge1xuLy8vICAgICBAaW5jbHVkZSBhYnNvbHV0ZS1jZW50ZXIoKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBvdXRwdXRcbi8vLyAgIC5mb28ge1xuLy8vICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4vLy8gICAgIG1hcmdpbjogYXV0bztcbi8vLyAgICAgdG9wOiAwO1xuLy8vICAgICByaWdodDogMDtcbi8vLyAgICAgYm90dG9tOiAwO1xuLy8vICAgICBsZWZ0OiAwO1xuLy8vICAgfVxuQG1peGluIGFic29sdXRlLWNlbnRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgbWFyZ2luOiBhdXRvO1xuICB0b3A6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGxlZnQ6IDA7XG59XG5cbi8vLyBSZXRpbml6ZSBJbWFnZXMgXG5AbWl4aW4gcmV0aW5pemUoJGZpbGUsICR0eXBlLCAkaGVpZ2h0LCAkd2lkdGgpIHtcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCRpbWdzcmMgKyAkZmlsZSArICcuJyArICR0eXBlKTtcbiAgQG1lZGlhICN7JGlzLWhkcGl9IHtcbiAgICAmIHtcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgkaW1nc3JjICsgJGZpbGUgKyAnLTJ4JyArICR0eXBlKTtcbiAgICAgIEBpbmNsdWRlIGJhY2tncm91bmQtc2l6ZSAoJHdpZHRoLCAkaGVpZ2h0KTtcbiAgICB9XG4gIH1cbn1cblxuLy8vIFJldGluYSBNZWRpYSBRdWVyeVxuQG1peGluIHJldGluYSB7XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIG9ubHkgc2NyZWVuIGFuZCAobWluLS1tb3otZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgb25seSBzY3JlZW4gYW5kICgtby1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyLzEpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpLCBvbmx5IHNjcmVlbiBhbmQgKG1pbi1yZXNvbHV0aW9uOiAyZHBweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbi8vLyBTdWJ0bGUgU2VwYXJhdG9yXG4vLy8gQGF1dGhvciBMb3VpcyBDaGVuYWlzXG4vLy9cbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vIGxpICsgbGkge1xuLy8vICAgLy8gc2ltdWxhdGVzIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKGJsYWNrLCAwLjIpOyBcbi8vLyAgIEBpbmNsdWRlIHN1YnRsZS1zZXAodG9wLCAxcHgsIHJnYmEoYmxhY2ssIDAuMikpOyAvL09yIGJvdHRvbSBvciBsZWZ0XG4vLy8gfVxuQG1peGluIHN1YnRsZS1zZXAoICRkaXIsICR3aWR0aCwgJGNvbG9yKSB7XG4gICRncmFkaWVudDogdG8gbGVmdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAmOmJlZm9yZSB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgI3skZGlyfTogMDtcbiAgICBAaWYgJGRpcj09Ym90dG9tIG9yICRkaXI9PXRvcCB7XG4gICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIGhlaWdodDogJHdpZHRoO1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBsZWZ0OiAwO1xuICAgIH1cbiAgICBAZWxzZSB7XG4gICAgICB0b3A6IDA7XG4gICAgICB3aWR0aDogJHdpZHRoO1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgJGdyYWRpZW50OiB0b3A7XG4gICAgfVxuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgkZ3JhZGllbnQsIHRyYW5zcGFyZW50LCAkY29sb3IsIHRyYW5zcGFyZW50KTtcbiAgfVxufVxuXG4vLy8gRHJvcGRvd24gbGluayBtaXhpbiB3aGljaCBjaGFuZ2VzIGl0cyBjaGlsZHJlbiBjb2xvciBhY2NvcmRpbmcgdG8gaXRzIGJhY2tncm91bmQgY29sb3IuXG4vLy8gQGF1dGhvciBMb3VpcyBDaGVuYWlzXG4vLy9cbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG4vLy8gQGV4YW1wbGUgc2Nzc1xuLy8vIC5kcm9wZG93biB7XG4vLy8gICBAaW5jbHVkZSBkcm9wZG93bigxcmVtLCAkYmdjLWRyb3Bkb3duKTtcbi8vLyAgIHBhZGRpbmctdG9wOiAuNnJlbTtcbi8vLyAgIHBhZGRpbmctYm90dG9tOiAuNnJlbTsgXG4vLy8gfVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkcGFkZGluZyAtIFBhZGRpbmcgbGVmdCBhbmQgcmlnaHQgYXBwbGllZCBvbiB0aGUgZHJvcGRvd24gY29udGFpbmVyXG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRiZ2MtZHJvcGRvd24gLSBCYWNrZ3JvdW5kIGNvbG9yIG9mIHRoZSBkcm9wZG93biBjb250YWluZXJcbkBtaXhpbiBkcm9wZG93biggJHBhZGRpbmctZHJvcGRvd24sICRiZ2MtZHJvcGRvd24pIHtcbiAgd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmctbGVmdDogJHBhZGRpbmctZHJvcGRvd247XG4gIHBhZGRpbmctcmlnaHQ6ICRwYWRkaW5nLWRyb3Bkb3duO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmdjLWRyb3Bkb3duO1xuICBjb2xvcjogc2V0LWNvbG9yKCRiZ2MtZHJvcGRvd24pO1xufVxuXG4vLy8gSWNvbiBNaXhpbiBhaW1lZCB0byBmYWtlIGFuIGljb24gYnV0IG1hZGUgaW4gcHVyZSBodG1sLiBGb3IgZXhhbXBsZSBhIHJvdW5kIGljb24gd3JhcHBpbmcgYSBzdGVwIG9yIHNlY3Rpb24gbnVtYmVyIG9yIGFuIGljb24gZm9udCB3cmFwcGVkIGluIGEgcm91bmRlZCAnPGRpdj4nLiBPbmx5IG1hZGUgdG8gYmUgdXNlIGluc2lkZSBhIGRyb3Bkb3duLlxuLy8vIEBhdXRob3IgTG91aXMgQ2hlbmFpc1xuLy8vXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3Mge1xuLy8vICBAaW5jbHVkZSBpY29uKDNyZW0sIDNweCwgJGJsdWUpOyAgXG4vLy8gfVxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkc2l6ZSAtIFNpemUgb2YgdGhlIHBhcmVudCB3cmFwcGluZyBvdXIgY29udGVudFxuLy8vIEBwYXJhbSB7TnVtYmVyfSAkYm9yZGVyLXdpZHRoIC0gQm9yZGVyIHdpZHRoIG9mIHRoZSBwYXJlbnQgd3JhcHBpbmcgb3VyIGNvbnRlbnRcbi8vLyBAcGFyYW0ge1N0cmluZ30gJGJvcmRlci1jb2xvciAtIEJvcmRlciBjb2xvciBvZiB0aGUgcGFyZW50IHdyYXBwaW5nIG91ciBjb250ZW50XG4vLy8gQHBhcmFtIHtTdHJpbmd9ICRiYWNrZ3JvdW5kLWNvbG9yIC0gQmFja2dyb3VuZCBjb2xvciBvZiB0aGUgcGFyZW50IHdyYXBwaW5nIG91ciBjb250ZW50XG5AbWl4aW4gaWNvbigkc2l6ZSwgJGJvcmRlci13aWR0aDogbnVsbCwgJGJvcmRlci1jb2xvcjogbnVsbCwgJGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50KSB7XG4gIEBpbmNsdWRlIGZsZXgtYWJzb2x1dGUtY2VudGVyKCk7XG4gIHdpZHRoOiAkc2l6ZTtcbiAgaGVpZ2h0OiAkc2l6ZTtcbiAgYm9yZGVyOiAkYm9yZGVyLXdpZHRoIHNvbGlkICRib3JkZXItY29sb3I7XG4gIGJhY2tncm91bmQtY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yO1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG59XG5cbi8vLyBNaXhpbiBoZWxwaW5nIGRlZmluaW5nIGJvdGggYHdpZHRoYCBhbmQgYGhlaWdodGAgc2ltdWx0YW5lb3VzbHkuXG4vLy9cbi8vLyBAYXV0aG9yIEh1Z28gR2lyYXVkZWxcbi8vL1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cbi8vLyBAcGFyYW0ge0xlbmd0aH0gJHdpZHRoIC0gRWxlbWVudOKAmXMgYHdpZHRoYFxuLy8vIEBwYXJhbSB7TGVuZ3RofSAkaGVpZ2h0ICgkd2lkdGgpIC0gRWxlbWVudOKAmXMgYGhlaWdodGBcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmZvbyB7XG4vLy8gICAgIEBpbmNsdWRlIHNpemUoMTBlbSk7XG4vLy8gICB9XG4vLy9cbi8vLyAgIC5iYXIge1xuLy8vICAgICBAaW5jbHVkZSBzaXplKDEwMCUsIDEwZW0pO1xuLy8vICAgfVxuLy8vXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIG91dHB1dFxuLy8vICAgLmZvbyB7XG4vLy8gICAgIHdpZHRoOiAxMGVtO1xuLy8vICAgICBoZWlnaHQ6IDEwZW07XG4vLy8gICB9XG4vLy9cbi8vLyAgIC5iYXIge1xuLy8vICAgICB3aWR0aDogMTAwJTtcbi8vLyAgICAgaGVpZ2h0OiAxMGVtO1xuLy8vICAgfVxuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcbiAgd2lkdGg6ICR3aWR0aDtcbiAgaGVpZ2h0OiAkaGVpZ2h0O1xufVxuXG4vLy8gTWl4aW4gcmVzZXRpbmcgdGhlIGRlZmF1bHQgbGluayBzdHlsZSBzZXQgaW4gY29tcG9uZW50cy9saW5rcy4gVGhhdCB3YXkgeW91IGNhbiBkZWZpbmUgc29tZSBvdGhlciBzdHlsZSBmb3IgcGFydGljdWxhciBsaW5rcy4gRm9yIGV4YW1wbGUgaW4gZm9vdGVyLCBoZWFkZXIsIG9yIG90aGVyIGtpbmQgb2YgY29tcG9uZW50cy5cbi8vL1xuLy8vIEBhdXRob3IgTG91aXMgQ2hlbmFpc1xuLy8vXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuLy8vIEBwYXJhbSB7U3RyaW5nfSAkY29sb3IgLSBjb2xvciBvZiB0aGUgbGluayBvbiBkZWZhdWx0IGFuZCBob3ZlciBzdGF0ZXMuXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgQGluY2x1ZGUgc2l6ZSgxMGVtKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBvdXRwdXRcbi8vLyAgIC5mb28ge1xuLy8vICAgICB3aWR0aDogMTBlbTtcbi8vLyAgICAgaGVpZ2h0OiAxMGVtO1xuLy8vICAgfVxuQG1peGluIHJlc2V0LWxpbmsoJGNvbG9yKSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6ICRjb2xvcjtcbiAgJjpob3ZlciB7XG4gICAgY29sb3I6ICRjb2xvcjtcbiAgfVxufVxuXG4vLy8gTWl4aW4gcmVtb3ZpbmcgdGhlIGRlZmF1bHQgb3V0bGluZS4gVGhhdCB3YXkgeW91IGNhbiBkZWZpbmUgc29tZSBvdGhlciBzdHlsZSBmb3IgcGFydGljdWxhciBlbGVtZW50cyBzdWNoIGFzIGJ1dHRvbnMuIEZvciBleGFtcGxlIHRoZSB0b2dnbGUgYnV0dG9uIGluIHRoZSBjYXJkIGNvbXBvbmVudC5cbi8vL1xuLy8vIEBhdXRob3IgTG91aXMgQ2hlbmFpc1xuLy8vXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgLmZvbyB7XG4vLy8gICAgIEBpbmNsdWRlIG5vLW91dGxpbmUoKTtcbi8vLyAgIH1cbi8vL1xuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBvdXRwdXRcbi8vLyAgIC5mb28ge1xuLy8vICAgICBvdXRsaW5lOiBub25lO1xuLy8vICAgfVxuLy8vICAgLmZvbzphY3RpdmUge1xuLy8vICAgICBvdXRsaW5lOiBub25lO1xuLy8vICAgfVxuLy8vICAgLmZvbzpmb2N1cyB7XG4vLy8gICAgIG91dGxpbmU6IG5vbmU7XG4vLy8gICB9IFxuQG1peGluIG5vLW91dGxpbmUoKSB7XG4gIG91dGxpbmU6IG5vbmU7XG4gICY6YWN0aXZlIHtcbiAgICBvdXRsaW5lOiBub25lO1xuICB9XG4gICY6Zm9jdXMge1xuICAgIG91dGxpbmU6IG5vbmU7XG4gIH1cbn1cblxuLy8vIE1peGluIGFsbG93aW5nIHRvIGtlZXAgdGhlIGluaXRpYWwgYXNwZWN0IHJhdGlvIG9mIGFuIGVsZW1lbnQuXG4vLy9cbi8vLyBAYXV0aG9yIEpha29iLWVcbi8vL1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cbi8vLyBAbGluayBodHRwOi8vY29kZXBlbi5pby9qYWtvYi1lL3Blbi9MRWRXTkJcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vIC5jbGFzcyB7IEBpbmNsdWRlIGFzcGVjdC1yYXRpbygpOyB9ICAgICAgICAgICAgLy8gTm8gYXJndW1lbnRzIGRlZmF1bHRzIHRvIGEgMToxIHJhdGlvXG4vLy8gLmNsYXNzIHsgQGluY2x1ZGUgYXNwZWN0LXJhdGlvKDE2LCA5KTsgfSAgICAgICAvLyBXaWR0aCBhbmQgaGVpZ2h0ICAgICBcbi8vLyAuY2xhc3MgeyBAaW5jbHVkZSBhc3BlY3QtcmF0aW8oMS43Nzc3NzgpOyB9ICAgIC8vIFJhdGlvIChjYWxjdWxhdGVkIHdpZHRoL2hlaWdodCkgICAgICAgICBcbi8vLyAuY2xhc3MgeyBAaW5jbHVkZSBhc3BlY3QtcmF0aW8oNHB4LCAzcHgpOyB9ICAgIC8vIENvbXBhcmFibGUgdW5pdHMgXG4vLy8gLmNsYXNzIHsgQGluY2x1ZGUgYXNwZWN0LXJhdGlvKCRyYXRpbzogMS4yKTsgfSAvLyBLZXl3b3JkcyBcbkBtaXhpbiBhc3BlY3QtcmF0aW8oJHJhdGlvLW9yLXdpZHRoLCAkaGVpZ2h0OiBudWxsKSB7XG4gICRwYWRkaW5nOiBpZigkaGVpZ2h0LCBwZXJjZW50YWdlKCRoZWlnaHQvJHJhdGlvLW9yLXdpZHRoKSwgcGVyY2VudGFnZSgxLyRyYXRpby1vci13aWR0aCkpO1xuICAmOmJlZm9yZSB7XG4gICAgY29udGVudDogJyc7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgcGFkZGluZy1ib3R0b206ICRwYWRkaW5nO1xuICB9XG4gICY6YWZ0ZXIge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIGRpc3BsYXk6IHRhYmxlO1xuICAgIGNsZWFyOiBib3RoO1xuICB9XG59XG5cbi8vLyBNaXhpbiBkaXNwbGF5aW5nIGEgdG9vbHRpcCB1bmRlciBpdHMgYXNzb2NpYXRlZCBpbnB1dC4gVGhlIGJlZm9yZSBwc2V1ZG8tZWxlbWVudCBpcyB0aGUgdG9vbHRpcCBpdHNlbGQgY29udGFpbmluZyB0aGUgdGlwIGFuZCB0aGUgYWZ0ZXIgaXMgdGhlIHRvb2x0aXAgYXJyb3cgcG9pbnRpbmcgdG93YXJkcyB0aGUgaW5wdXQuIFRoaXMgbWl4aW4gbXVzdCBiZSBhcHBsaWVkIG9uIHRoZSB0b29sdGlwIG1vZGlmaWVyIGNsYXNzICh0b29sdGlwLS10b3AsIHRvb2x0aXAtLXJpZ2h0LCB0b29sdGlwLS1ib3R0b20sIHRvb2x0aXAtLWxlZnQpLlxuLy8vXG4vLy8gQGF1dGhvciBMb3VpcyBDaGVuYWlzXG4vLy9cbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vXG4vLy8gQGxpbmsgaHR0cDovL2NvZGVwZW4uaW8vcGVpY2hlL3Blbi9KYWZ0QVxuLy8vXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gLnRvb2x0aXAtLXJpZ2h0IHsgQGluY2x1ZGUgdG91Y2gtaW5wdXQtdG9vbHRpcCgpOyB9IFxuQG1peGluIHRvdWNoLWlucHV0LXRvb2x0aXAge1xuICAuaW5wdXQtd3JhcHBlciA+IGlucHV0OmZvY3VzIH4gLnRvb2x0aXAtd3JhcHBlciAmOmJlZm9yZSxcbiAgLmlucHV0LXdyYXBwZXIgPiBpbnB1dDpmb2N1cyB+IC50b29sdGlwLXdyYXBwZXIgJjphZnRlciB7XG4gICAgb3BhY2l0eTogMTtcbiAgfVxuICAuaW5wdXQtd3JhcHBlciAmOmJlZm9yZSB7XG4gICAgQGluY2x1ZGUgbXEoJGZyb206IG1vYmlsZSwgJHVudGlsOiBkZXNrdG9wKSB7XG4gICAgICB0b3A6IDEwMCU7XG4gICAgICBsZWZ0OiAwO1xuICAgICAgbWFyZ2luLWxlZnQ6IDA7XG4gICAgICB3aWR0aDogJHNpbmdsZS1mb3JtLXdpZHRoLS10YWJsZXQ7XG4gICAgfVxuICB9XG4gIC5pbnB1dC13cmFwcGVyICY6YWZ0ZXIge1xuICAgIEBpbmNsdWRlIG1xKCRmcm9tOiBtb2JpbGUsICR1bnRpbDogZGVza3RvcCkge1xuICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogJGxpZ2h0Ymx1ZTtcbiAgICAgIGJvcmRlci10b3A6IG5vbmU7XG4gICAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICAgIHRvcDogNTAlO1xuICAgICAgbWFyZ2luLXRvcDogLTZweDtcbiAgICB9XG4gIH1cbn1cblxuLy8vIE1peGluIHByb3ZpZGluZyBhIHBuZyBmYWxsYmFjayBmb3IgYW4gc3ZnIGJhY2tncm91bmQgaW1hZ2UuIEl0IHdvcmtzIGJ5IGRlZmluaW5nIHR3byBiYWNrZ3JvdW5kLWltYWdlIG9uIGEgY29udGFpbmVyLiBCcm93c2VycyB0aGF0IHN1cHBvcnQgbXVsdGlwbGUgYmFja2dyb3VuZCBpbWFnZXMgd2lsbCBkaXNwbGF5IHRoZSBzdmcgd2hlcmVhcyB0aG9zZSB0aGF0IGRvbid0IHN1cHBvcnQgaXQgd2lsbCBkaXNwbGF5IHRoZSBwbmcuIEl0IHVzZXMgdGhlIHZhcmlhYmxlICRwdWJsaWMtcGF0aCBhdmFpbGFibGUgaW4gc2Nzcy90b29scy92YXJpYWJsZXMvc2l0ZS1zZXR0aW5ncy5zY3NzXG4vLy9cbi8vLyBAYXV0aG9yIEJlbiBTY2h3YXJ6IChAYmVuc2Nod2Fyeilcbi8vL1xuLy8vIEBhY2Nlc3MgcHVibGljXG4vLy9cbi8vLyBAbGluayBodHRwOi8vZ2VybWFuZm9yYmxhY2suY29tL3Bvc3QvNDM5NzU1NzU0MjIvcHJvdGlwLWFsbC1icm93c2Vycy10aGF0LXN1cHBvcnQtc3ZnLWJhY2tncm91bmRcbi8vL1xuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vIC5sb2dvLXNwb3J0ZWFzeSB7IFxuLy8vICAgIEBpbmNsdWRlIHRvdWNoLWlucHV0LXRvb2x0aXAobG9nb19zcG9ydGVhc3kpO1xuLy8vIH0gXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIG91dHB1dFxuLy8vIC5sb2dvLXNwb3J0ZWFzeSB7XG4vLy8gICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcjeyRwdWJsaWNfcGF0aH1pbWFnZXMvbG9nb19zcG9ydGVhc3kucG5nJyk7XG4vLy8gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZSwgdXJsKCcjeyRwdWJsaWNfcGF0aH1pbWFnZXMvbG9nb19zcG9ydGVhc3kuc3ZnJyk7XG4vLy8gfVxuQG1peGluIHZlY3Rvci1iZy13aXRoLWZhbGxiYWNrKCRuYW1lKSB7XG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnI3skcHVibGljX3BhdGh9aW1hZ2VzL2Zyb250ZW5kL2xvZ29zLyN7JG5hbWV9LnBuZycpO1xuICBiYWNrZ3JvdW5kLWltYWdlOiBub25lLFxuICB1cmwoJyN7JHB1YmxpY19wYXRofWltYWdlcy9mcm9udGVuZC9sb2dvcy8jeyRuYW1lfS5zdmcnKTtcbn1cblxuLy8vIEdpdmVuIHRoZSBsb2NhdGlvbiBvZiBhIHdlYmZvbnQsIHdpbGwgZ2VuZXJhdGUgYSBmb250LWZhY2UgZGVjbGFyYXRpb24gd2l0aCBtdWx0aXBsZSBmaWxlIGZvcm1hdHMuXG4vLy8gQGFjY2VzcyBwdWJsaWNcbi8vLyBAcGFyYW0ge1N0cmluZ30gJGZvbnQtbmFtZSAtIEZvbnQgZmFtaWx5IG5hbWVcbi8vLyBAcGFyYW0ge1N0cmluZ30gJGZpbGUtbmFtZSAtIEZpbGUgbmFtZSAobm8gZXh0ZW5zaW9uKVxuLy8vIEBwYXJhbSB7U3RyaW5nIHwgTnVtYmVyfSAkd2VpZ2h0IFtub3JtYWxdIC0gRm9udCB3ZWlnaHRcbi8vLyBAcGFyYW0ge1N0cmluZ30gJHN0eWxlIFtub3JtYWxdIC0gRm9udCBzdHlsZVxuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxuLy8vICAgQGluY2x1ZGUgZm9udC1mYWNlKCdnb3RoYW0nLCAnL2ZvbnRzL2dvdGhhbScpO1xuQG1peGluIGZvbnQtZmFjZSgkZm9udC1uYW1lLFxuJGZpbGUtbmFtZSxcbiR3ZWlnaHQ6IG5vcm1hbCxcbiRzdHlsZTogbm9ybWFsKSB7XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBxdW90ZSgkZm9udC1uYW1lKTtcbiAgICBzcmM6IHVybCgkZmlsZS1uYW1lICsgJy5lb3QnKTtcbiAgICBzcmM6IHVybCgkZmlsZS1uYW1lICsgJy5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLFxuICAgIHVybCgkZmlsZS1uYW1lICsgJy53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXG4gICAgdXJsKCRmaWxlLW5hbWUgKyAnLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSxcbiAgICB1cmwoJGZpbGUtbmFtZSArICcuc3ZnIyN7JGZvbnQtbmFtZX0nKSBmb3JtYXQoJ3N2ZycpO1xuICAgIGZvbnQtd2VpZ2h0OiAkd2VpZ2h0O1xuICAgIGZvbnQtc3R5bGU6ICRzdHlsZTtcbiAgfVxufVxuXG4vLy8gQmFja2dyb3VuZCBncmFkaWVudCBoZWxwZXJcbi8vLyBAYWNjZXNzIHB1YmxpY1xuLy8vIEBwYXJhbSB7Q29sb3J9ICRzdGFydC1jb2xvciAtIFN0YXJ0IGNvbG9yXG4vLy8gQHBhcmFtIHtDb2xvcn0gJGVuZC1jb2xvciAtIEVuZCBjb2xvclxuLy8vIEBwYXJhbSB7U3RyaW5nfSAkb3JpZW50YXRpb24gLSBUeXBlIG9mIGdyYWRpZW50LCBlaXRoZXIgYHZlcnRpY2FsYCwgYGhvcml6b250YWxgIG9yIGByYWRpYWxgXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXG4vLy8gICAuZm9vIHtcbi8vLyAgICAgQGluY2x1ZGUgYmFja2dyb3VuZC1ncmFkaWVudChyZWQsIGJsYWNrLCAndmVydGljYWwnKTtcbi8vLyAgIH1cbi8vLyBAZXhhbXBsZSBjc3MgLSBSZXN1bHRcbi8vLyAgIC5mb28ge1xuLy8vICAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsIHJlZCwgYmxhY2spO1xuLy8vICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCByZWQsIGJsYWNrKTtcbi8vLyAgIH1cbkBtaXhpbiBiYWNrZ3JvdW5kLWdyYWRpZW50KCRzdGFydC1jb2xvcixcbiRlbmQtY29sb3IsXG4kb3JpZW50YXRpb24pIHtcbiAgYmFja2dyb3VuZDogJHN0YXJ0LWNvbG9yO1xuICBAaWYgJG9yaWVudGF0aW9uPT0ndmVydGljYWwnIHtcbiAgICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCh0b3AsICRzdGFydC1jb2xvciwgJGVuZC1jb2xvcik7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgJHN0YXJ0LWNvbG9yLCAkZW5kLWNvbG9yKTtcbiAgfVxuICBAZWxzZSBpZiAkb3JpZW50YXRpb249PSdob3Jpem9udGFsJyB7XG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQobGVmdCwgJHN0YXJ0LWNvbG9yLCAkZW5kLWNvbG9yKTtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICRzdGFydC1jb2xvciwgJGVuZC1jb2xvcik7XG4gIH1cbiAgQGVsc2Uge1xuICAgIGJhY2tncm91bmQ6IC13ZWJraXQtcmFkaWFsLWdyYWRpZW50KGNlbnRlciwgZWxsaXBzZSBjb3ZlciwgJHN0YXJ0LWNvbG9yLCAkZW5kLWNvbG9yKTtcbiAgICBiYWNrZ3JvdW5kOiByYWRpYWwtZ3JhZGllbnQoZWxsaXBzZSBhdCBjZW50ZXIsICRzdGFydC1jb2xvciwgJGVuZC1jb2xvcik7XG4gIH1cbn1cblxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9 */
